{
	"id": "72b15397285a25719350b7c02bd5b71b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Codes(EASY)/Build Token One.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract WrigglyToken is ERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n\r\n    constructor(uint256 initialSupply) ERC20(\"My Token\", \"MTKN\") {\r\n        // TODO\r\n        owner=msg.sender;\r\n         _mint(msg.sender, initialSupply * 10 ** decimals());\r\n\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        // TODO\r\n        uint256 rawBalance = balanceOf(msg.sender);\r\n        return rawBalance / 10 ** decimals(); // Adjusting for decimals\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Codes(EASY)/Build Token One.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Codes(EASY)/Build Token One.sol": {
				"WrigglyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Codes(EASY)/Build Token One.sol\":145:639  contract WrigglyToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":247:425  constructor(uint256 initialSupply) ERC20(\"My Token\", \"MTKN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x4d7920546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b4e00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":342:352  msg.sender */\n  caller\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":336:341  owner */\n  0x05\n  0x00\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":336:352  owner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":364:415  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  tag_11\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":370:380  msg.sender */\n  caller\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":404:414  decimals() */\n  tag_12\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":404:412  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":404:414  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":398:400  10 */\n  0x0a\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":398:414  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":382:395  initialSupply */\n  dup4\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":382:414  initialSupply * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":364:369  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":364:415  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":247:425  constructor(uint256 initialSupply) ERC20(\"My Token\", \"MTKN\") {... */\n  pop\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":145:639  contract WrigglyToken is ERC20 {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_79\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_80:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_82\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_85\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":781:900   */\ntag_84:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_86\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_91:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_93\n  tag_47\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1758:1842   */\ntag_92:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_98\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2473:2512   */\n  tag_99\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_102\n    /* \"#utility.yul\":2779:2813   */\n  tag_103\n    /* \"#utility.yul\":2788:2812   */\n  tag_104\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_107\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3078:3169   */\n  tag_108\n    /* \"#utility.yul\":3127:3168   */\n  tag_109\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_112\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3379:3444   */\n  tag_113\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_115:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_118\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_121\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3867:3896   */\n  tag_122\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_123:\n    /* \"#utility.yul\":4094:4174   */\n  tag_124\n    /* \"#utility.yul\":4150:4172   */\n  tag_125\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_120:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_128\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_130\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_132\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_134\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4999:5055   */\ntag_133:\n    /* \"#utility.yul\":5079:5117   */\n  tag_135\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5164:5231   */\n  tag_136\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_139:\n    /* \"#utility.yul\":6105:6172   */\n  tag_140\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_137)\n    /* \"#utility.yul\":5326:5944   */\ntag_138:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_141\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_142:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_146\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_145:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_137:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6375   */\ntag_64:\n    /* \"#utility.yul\":6243:6320   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6240:6241   */\n  0x00\n    /* \"#utility.yul\":6233:6321   */\n  mstore\n    /* \"#utility.yul\":6340:6344   */\n  0x11\n    /* \"#utility.yul\":6337:6338   */\n  0x04\n    /* \"#utility.yul\":6330:6345   */\n  mstore\n    /* \"#utility.yul\":6364:6368   */\n  0x24\n    /* \"#utility.yul\":6361:6362   */\n  0x00\n    /* \"#utility.yul\":6354:6369   */\n  revert\n    /* \"#utility.yul\":6381:6483   */\ntag_65:\n    /* \"#utility.yul\":6423:6431   */\n  0x00\n    /* \"#utility.yul\":6470:6475   */\n  dup2\n    /* \"#utility.yul\":6467:6468   */\n  0x01\n    /* \"#utility.yul\":6463:6476   */\n  shr\n    /* \"#utility.yul\":6442:6476   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6483   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6489:7337   */\ntag_66:\n    /* \"#utility.yul\":6550:6555   */\n  0x00\n    /* \"#utility.yul\":6557:6561   */\n  0x00\n    /* \"#utility.yul\":6581:6587   */\n  dup3\n    /* \"#utility.yul\":6572:6587   */\n  swap2\n  pop\n    /* \"#utility.yul\":6605:6610   */\n  dup4\n    /* \"#utility.yul\":6596:6610   */\n  swap1\n  pop\n    /* \"#utility.yul\":6619:7331   */\ntag_150:\n    /* \"#utility.yul\":6640:6641   */\n  0x01\n    /* \"#utility.yul\":6630:6638   */\n  dup6\n    /* \"#utility.yul\":6627:6642   */\n  gt\n    /* \"#utility.yul\":6619:7331   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6735:6739   */\n  dup1\n    /* \"#utility.yul\":6730:6733   */\n  dup7\n    /* \"#utility.yul\":6726:6740   */\n  div\n    /* \"#utility.yul\":6720:6724   */\n  dup2\n    /* \"#utility.yul\":6717:6741   */\n  gt\n    /* \"#utility.yul\":6714:6764   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6744:6762   */\n  tag_154\n  tag_64\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6714:6764   */\ntag_153:\n    /* \"#utility.yul\":6794:6795   */\n  0x01\n    /* \"#utility.yul\":6784:6792   */\n  dup6\n    /* \"#utility.yul\":6780:6796   */\n  and\n    /* \"#utility.yul\":6777:7228   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7209:7213   */\n  dup1\n    /* \"#utility.yul\":7202:7207   */\n  dup3\n    /* \"#utility.yul\":7198:7214   */\n  mul\n    /* \"#utility.yul\":7189:7214   */\n  swap2\n  pop\n    /* \"#utility.yul\":6777:7228   */\ntag_155:\n    /* \"#utility.yul\":7259:7263   */\n  dup1\n    /* \"#utility.yul\":7253:7257   */\n  dup2\n    /* \"#utility.yul\":7249:7264   */\n  mul\n    /* \"#utility.yul\":7241:7264   */\n  swap1\n  pop\n    /* \"#utility.yul\":7289:7321   */\n  tag_156\n    /* \"#utility.yul\":7312:7320   */\n  dup6\n    /* \"#utility.yul\":7289:7321   */\n  tag_65\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7277:7321   */\n  swap5\n  pop\n    /* \"#utility.yul\":6619:7331   */\n  jump(tag_150)\ntag_152:\n    /* \"#utility.yul\":6489:7337   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7343:8416   */\ntag_67:\n    /* \"#utility.yul\":7397:7402   */\n  0x00\n    /* \"#utility.yul\":7588:7596   */\n  dup3\n    /* \"#utility.yul\":7578:7618   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7609:7610   */\n  0x01\n    /* \"#utility.yul\":7600:7610   */\n  swap1\n  pop\n    /* \"#utility.yul\":7611:7616   */\n  jump(tag_157)\n    /* \"#utility.yul\":7578:7618   */\ntag_158:\n    /* \"#utility.yul\":7637:7641   */\n  dup2\n    /* \"#utility.yul\":7627:7663   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7654:7655   */\n  0x00\n    /* \"#utility.yul\":7645:7655   */\n  swap1\n  pop\n    /* \"#utility.yul\":7656:7661   */\n  jump(tag_157)\n    /* \"#utility.yul\":7627:7663   */\ntag_159:\n    /* \"#utility.yul\":7723:7727   */\n  dup2\n    /* \"#utility.yul\":7771:7772   */\n  0x01\n    /* \"#utility.yul\":7766:7793   */\n  dup2\n  eq\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7807:7808   */\n  0x02\n    /* \"#utility.yul\":7802:7993   */\n  dup2\n  eq\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7716:7993   */\n  jump(tag_160)\n    /* \"#utility.yul\":7766:7793   */\ntag_161:\n    /* \"#utility.yul\":7784:7785   */\n  0x01\n    /* \"#utility.yul\":7775:7785   */\n  swap2\n  pop\n    /* \"#utility.yul\":7786:7791   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7802:7993   */\ntag_162:\n    /* \"#utility.yul\":7847:7850   */\n  0xff\n    /* \"#utility.yul\":7837:7845   */\n  dup5\n    /* \"#utility.yul\":7834:7851   */\n  gt\n    /* \"#utility.yul\":7831:7874   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7854:7872   */\n  tag_164\n  tag_64\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7831:7874   */\ntag_163:\n    /* \"#utility.yul\":7903:7911   */\n  dup4\n    /* \"#utility.yul\":7900:7901   */\n  0x02\n    /* \"#utility.yul\":7896:7912   */\n  exp\n    /* \"#utility.yul\":7887:7912   */\n  swap2\n  pop\n    /* \"#utility.yul\":7938:7941   */\n  dup5\n    /* \"#utility.yul\":7931:7936   */\n  dup3\n    /* \"#utility.yul\":7928:7942   */\n  gt\n    /* \"#utility.yul\":7925:7965   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7945:7963   */\n  tag_166\n  tag_64\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7925:7965   */\ntag_165:\n    /* \"#utility.yul\":7978:7983   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7716:7993   */\ntag_160:\n  pop\n    /* \"#utility.yul\":8102:8104   */\n  0x20\n    /* \"#utility.yul\":8092:8100   */\n  dup4\n    /* \"#utility.yul\":8089:8105   */\n  lt\n    /* \"#utility.yul\":8083:8086   */\n  0x0133\n    /* \"#utility.yul\":8077:8081   */\n  dup4\n    /* \"#utility.yul\":8074:8087   */\n  lt\n    /* \"#utility.yul\":8070:8106   */\n  and\n    /* \"#utility.yul\":8052:8054   */\n  0x4e\n    /* \"#utility.yul\":8042:8050   */\n  dup5\n    /* \"#utility.yul\":8039:8055   */\n  lt\n    /* \"#utility.yul\":8034:8036   */\n  0x0b\n    /* \"#utility.yul\":8028:8032   */\n  dup5\n    /* \"#utility.yul\":8025:8037   */\n  lt\n    /* \"#utility.yul\":8021:8056   */\n  and\n    /* \"#utility.yul\":8005:8116   */\n  or\n    /* \"#utility.yul\":8002:8248   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8158:8166   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup3\n    /* \"#utility.yul\":8148:8167   */\n  exp\n    /* \"#utility.yul\":8139:8167   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8196   */\n  dup4\n    /* \"#utility.yul\":8186:8191   */\n  dup2\n    /* \"#utility.yul\":8183:8197   */\n  gt\n    /* \"#utility.yul\":8180:8220   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8200:8218   */\n  tag_169\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8180:8220   */\ntag_168:\n    /* \"#utility.yul\":8233:8238   */\n  jump(tag_157)\n    /* \"#utility.yul\":8002:8248   */\ntag_167:\n    /* \"#utility.yul\":8273:8315   */\n  tag_170\n    /* \"#utility.yul\":8311:8314   */\n  dup5\n    /* \"#utility.yul\":8301:8309   */\n  dup5\n    /* \"#utility.yul\":8295:8299   */\n  dup5\n    /* \"#utility.yul\":8292:8293   */\n  0x01\n    /* \"#utility.yul\":8273:8315   */\n  tag_66\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8258:8315   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8347:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8345   */\n  dup5\n    /* \"#utility.yul\":8338:8352   */\n  div\n    /* \"#utility.yul\":8331:8336   */\n  dup2\n    /* \"#utility.yul\":8328:8353   */\n  gt\n    /* \"#utility.yul\":8325:8376   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8356:8374   */\n  tag_172\n  tag_64\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8325:8376   */\ntag_171:\n    /* \"#utility.yul\":8405:8409   */\n  dup2\n    /* \"#utility.yul\":8398:8403   */\n  dup2\n    /* \"#utility.yul\":8394:8410   */\n  mul\n    /* \"#utility.yul\":8385:8410   */\n  swap1\n  pop\n    /* \"#utility.yul\":7343:8416   */\ntag_157:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8422:8508   */\ntag_68:\n    /* \"#utility.yul\":8457:8464   */\n  0x00\n    /* \"#utility.yul\":8497:8501   */\n  0xff\n    /* \"#utility.yul\":8490:8495   */\n  dup3\n    /* \"#utility.yul\":8486:8502   */\n  and\n    /* \"#utility.yul\":8475:8502   */\n  swap1\n  pop\n    /* \"#utility.yul\":8422:8508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8514:8795   */\ntag_15:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8596:8619   */\n  tag_175\n    /* \"#utility.yul\":8614:8618   */\n  dup3\n    /* \"#utility.yul\":8596:8619   */\n  tag_42\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8588:8619   */\n  swap2\n  pop\n    /* \"#utility.yul\":8640:8665   */\n  tag_176\n    /* \"#utility.yul\":8656:8664   */\n  dup4\n    /* \"#utility.yul\":8640:8665   */\n  tag_68\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8628:8665   */\n  swap3\n  pop\n    /* \"#utility.yul\":8684:8788   */\n  tag_177\n    /* \"#utility.yul\":8721:8787   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8711:8719   */\n  dup5\n    /* \"#utility.yul\":8705:8709   */\n  dup5\n    /* \"#utility.yul\":8684:8788   */\n  tag_67\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8675:8788   */\n  swap1\n  pop\n    /* \"#utility.yul\":8514:8795   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8801:9211   */\ntag_17:\n    /* \"#utility.yul\":8841:8848   */\n  0x00\n    /* \"#utility.yul\":8864:8884   */\n  tag_179\n    /* \"#utility.yul\":8882:8883   */\n  dup3\n    /* \"#utility.yul\":8864:8884   */\n  tag_42\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8859:8884   */\n  swap2\n  pop\n    /* \"#utility.yul\":8898:8918   */\n  tag_180\n    /* \"#utility.yul\":8916:8917   */\n  dup4\n    /* \"#utility.yul\":8898:8918   */\n  tag_42\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8893:8918   */\n  swap3\n  pop\n    /* \"#utility.yul\":8953:8954   */\n  dup3\n    /* \"#utility.yul\":8950:8951   */\n  dup3\n    /* \"#utility.yul\":8946:8955   */\n  mul\n    /* \"#utility.yul\":8975:9005   */\n  tag_181\n    /* \"#utility.yul\":8993:9004   */\n  dup2\n    /* \"#utility.yul\":8975:9005   */\n  tag_42\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8964:9005   */\n  swap2\n  pop\n    /* \"#utility.yul\":9154:9155   */\n  dup3\n    /* \"#utility.yul\":9145:9152   */\n  dup3\n    /* \"#utility.yul\":9141:9156   */\n  div\n    /* \"#utility.yul\":9138:9139   */\n  dup5\n    /* \"#utility.yul\":9135:9157   */\n  eq\n    /* \"#utility.yul\":9115:9116   */\n  dup4\n    /* \"#utility.yul\":9108:9117   */\n  iszero\n    /* \"#utility.yul\":9088:9171   */\n  or\n    /* \"#utility.yul\":9065:9204   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9184:9202   */\n  tag_183\n  tag_64\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9065:9204   */\ntag_182:\n    /* \"#utility.yul\":8849:9211   */\n  pop\n    /* \"#utility.yul\":8801:9211   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_69:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_70:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_186\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_69\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_71:\n    /* \"#utility.yul\":9538:9562   */\n  tag_188\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_70\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_24:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_190\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_30:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_192\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_42\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_193\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_42\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_195\n  tag_64\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9951:9987   */\ntag_194:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_72:\n    /* \"#utility.yul\":10087:10111   */\n  tag_197\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_42\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_34:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_199\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10405:10477   */\n  tag_200\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_72\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10487:10559   */\n  tag_201\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_38:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_203\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Codes(EASY)/Build Token One.sol\":145:639  contract WrigglyToken is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":145:639  contract WrigglyToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":433:636  function getBalance() public view returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":218:238  address public owner */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":433:636  function getBalance() public view returns (uint256) {... */\n    tag_26:\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":476:483  uint256 */\n      0x00\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":513:531  uint256 rawBalance */\n      0x00\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":534:555  balanceOf(msg.sender) */\n      tag_75\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":544:554  msg.sender */\n      caller\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":534:543  balanceOf */\n      tag_44\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":534:555  balanceOf(msg.sender) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":513:555  uint256 rawBalance = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":592:602  decimals() */\n      tag_76\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":592:600  decimals */\n      tag_38\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":592:602  decimals() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":586:588  10 */\n      0x0a\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":586:602  10 ** decimals() */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":573:583  rawBalance */\n      dup2\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":573:602  rawBalance / 10 ** decimals() */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":566:602  return rawBalance / 10 ** decimals() */\n      swap2\n      pop\n      pop\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":433:636  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Codes(EASY)/Build Token One.sol\":218:238  address public owner */\n    tag_47:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_64\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_129)\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_133)\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_135:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_136:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_137:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_138:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_139:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_168\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_135\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":711:782   */\n      tag_169\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_136\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_170\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_137\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":881:910   */\n      tag_171\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_138\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_18:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_173\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_139\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_141:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_143:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_144:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_179\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_143\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_145:\n        /* \"#utility.yul\":1876:1900   */\n      tag_181\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_144\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_182:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_146:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_184\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_145\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_147:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_148:\n        /* \"#utility.yul\":2232:2256   */\n      tag_187\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_147\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_188:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_149:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_190\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_148\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_21:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_193\n      tag_141\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2525:2644   */\n    tag_192:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_194\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_146\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_195\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_149\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_150:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_151:\n        /* \"#utility.yul\":3089:3110   */\n      tag_198\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_150\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_24:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_200\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_151\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_152:\n        /* \"#utility.yul\":3426:3450   */\n      tag_202\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_28:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_204\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_34:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_207\n      tag_141\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3801:3920   */\n    tag_206:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_208\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_146\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_209\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_146\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_210\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_149\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_153:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_154:\n        /* \"#utility.yul\":4491:4513   */\n      tag_213\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_153\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_40:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_215\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_154\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_43:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_218\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4822:4941   */\n    tag_217:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_219\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_146\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_155:\n        /* \"#utility.yul\":5168:5192   */\n      tag_221\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_144\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_49:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_223\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_155\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_59:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_226\n      tag_141\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5526:5645   */\n    tag_225:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_227\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_146\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_228\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_146\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_156:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_64:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_231:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_233\n      tag_156\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6329:6413   */\n    tag_232:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_157:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6713   */\n    tag_158:\n        /* \"#utility.yul\":6653:6661   */\n      0x00\n        /* \"#utility.yul\":6700:6705   */\n      dup2\n        /* \"#utility.yul\":6697:6698   */\n      0x01\n        /* \"#utility.yul\":6693:6706   */\n      shr\n        /* \"#utility.yul\":6672:6706   */\n      swap1\n      pop\n        /* \"#utility.yul\":6611:6713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:7567   */\n    tag_159:\n        /* \"#utility.yul\":6780:6785   */\n      0x00\n        /* \"#utility.yul\":6787:6791   */\n      0x00\n        /* \"#utility.yul\":6811:6817   */\n      dup3\n        /* \"#utility.yul\":6802:6817   */\n      swap2\n      pop\n        /* \"#utility.yul\":6835:6840   */\n      dup4\n        /* \"#utility.yul\":6826:6840   */\n      swap1\n      pop\n        /* \"#utility.yul\":6849:7561   */\n    tag_237:\n        /* \"#utility.yul\":6870:6871   */\n      0x01\n        /* \"#utility.yul\":6860:6868   */\n      dup6\n        /* \"#utility.yul\":6857:6872   */\n      gt\n        /* \"#utility.yul\":6849:7561   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6965:6969   */\n      dup1\n        /* \"#utility.yul\":6960:6963   */\n      dup7\n        /* \"#utility.yul\":6956:6970   */\n      div\n        /* \"#utility.yul\":6950:6954   */\n      dup2\n        /* \"#utility.yul\":6947:6971   */\n      gt\n        /* \"#utility.yul\":6944:6994   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":6974:6992   */\n      tag_241\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6944:6994   */\n    tag_240:\n        /* \"#utility.yul\":7024:7025   */\n      0x01\n        /* \"#utility.yul\":7014:7022   */\n      dup6\n        /* \"#utility.yul\":7010:7026   */\n      and\n        /* \"#utility.yul\":7007:7458   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7439:7443   */\n      dup1\n        /* \"#utility.yul\":7432:7437   */\n      dup3\n        /* \"#utility.yul\":7428:7444   */\n      mul\n        /* \"#utility.yul\":7419:7444   */\n      swap2\n      pop\n        /* \"#utility.yul\":7007:7458   */\n    tag_242:\n        /* \"#utility.yul\":7489:7493   */\n      dup1\n        /* \"#utility.yul\":7483:7487   */\n      dup2\n        /* \"#utility.yul\":7479:7494   */\n      mul\n        /* \"#utility.yul\":7471:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7519:7551   */\n      tag_243\n        /* \"#utility.yul\":7542:7550   */\n      dup6\n        /* \"#utility.yul\":7519:7551   */\n      tag_158\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7507:7551   */\n      swap5\n      pop\n        /* \"#utility.yul\":6849:7561   */\n      jump(tag_237)\n    tag_239:\n        /* \"#utility.yul\":6719:7567   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7573:8646   */\n    tag_160:\n        /* \"#utility.yul\":7627:7632   */\n      0x00\n        /* \"#utility.yul\":7818:7826   */\n      dup3\n        /* \"#utility.yul\":7808:7848   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7839:7840   */\n      0x01\n        /* \"#utility.yul\":7830:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:7846   */\n      jump(tag_244)\n        /* \"#utility.yul\":7808:7848   */\n    tag_245:\n        /* \"#utility.yul\":7867:7871   */\n      dup2\n        /* \"#utility.yul\":7857:7893   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":7884:7885   */\n      0x00\n        /* \"#utility.yul\":7875:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7886:7891   */\n      jump(tag_244)\n        /* \"#utility.yul\":7857:7893   */\n    tag_246:\n        /* \"#utility.yul\":7953:7957   */\n      dup2\n        /* \"#utility.yul\":8001:8002   */\n      0x01\n        /* \"#utility.yul\":7996:8023   */\n      dup2\n      eq\n      tag_248\n      jumpi\n        /* \"#utility.yul\":8037:8038   */\n      0x02\n        /* \"#utility.yul\":8032:8223   */\n      dup2\n      eq\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7946:8223   */\n      jump(tag_247)\n        /* \"#utility.yul\":7996:8023   */\n    tag_248:\n        /* \"#utility.yul\":8014:8015   */\n      0x01\n        /* \"#utility.yul\":8005:8015   */\n      swap2\n      pop\n        /* \"#utility.yul\":8016:8021   */\n      pop\n      jump(tag_244)\n        /* \"#utility.yul\":8032:8223   */\n    tag_249:\n        /* \"#utility.yul\":8077:8080   */\n      0xff\n        /* \"#utility.yul\":8067:8075   */\n      dup5\n        /* \"#utility.yul\":8064:8081   */\n      gt\n        /* \"#utility.yul\":8061:8104   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":8084:8102   */\n      tag_251\n      tag_157\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8061:8104   */\n    tag_250:\n        /* \"#utility.yul\":8133:8141   */\n      dup4\n        /* \"#utility.yul\":8130:8131   */\n      0x02\n        /* \"#utility.yul\":8126:8142   */\n      exp\n        /* \"#utility.yul\":8117:8142   */\n      swap2\n      pop\n        /* \"#utility.yul\":8168:8171   */\n      dup5\n        /* \"#utility.yul\":8161:8166   */\n      dup3\n        /* \"#utility.yul\":8158:8172   */\n      gt\n        /* \"#utility.yul\":8155:8195   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":8175:8193   */\n      tag_253\n      tag_157\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8155:8195   */\n    tag_252:\n        /* \"#utility.yul\":8208:8213   */\n      pop\n      jump(tag_244)\n        /* \"#utility.yul\":7946:8223   */\n    tag_247:\n      pop\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"#utility.yul\":8322:8330   */\n      dup4\n        /* \"#utility.yul\":8319:8335   */\n      lt\n        /* \"#utility.yul\":8313:8316   */\n      0x0133\n        /* \"#utility.yul\":8307:8311   */\n      dup4\n        /* \"#utility.yul\":8304:8317   */\n      lt\n        /* \"#utility.yul\":8300:8336   */\n      and\n        /* \"#utility.yul\":8282:8284   */\n      0x4e\n        /* \"#utility.yul\":8272:8280   */\n      dup5\n        /* \"#utility.yul\":8269:8285   */\n      lt\n        /* \"#utility.yul\":8264:8266   */\n      0x0b\n        /* \"#utility.yul\":8258:8262   */\n      dup5\n        /* \"#utility.yul\":8255:8267   */\n      lt\n        /* \"#utility.yul\":8251:8286   */\n      and\n        /* \"#utility.yul\":8235:8346   */\n      or\n        /* \"#utility.yul\":8232:8478   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":8388:8396   */\n      dup3\n        /* \"#utility.yul\":8382:8386   */\n      dup3\n        /* \"#utility.yul\":8378:8397   */\n      exp\n        /* \"#utility.yul\":8369:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8423:8426   */\n      dup4\n        /* \"#utility.yul\":8416:8421   */\n      dup2\n        /* \"#utility.yul\":8413:8427   */\n      gt\n        /* \"#utility.yul\":8410:8450   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8430:8448   */\n      tag_256\n      tag_157\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8410:8450   */\n    tag_255:\n        /* \"#utility.yul\":8463:8468   */\n      jump(tag_244)\n        /* \"#utility.yul\":8232:8478   */\n    tag_254:\n        /* \"#utility.yul\":8503:8545   */\n      tag_257\n        /* \"#utility.yul\":8541:8544   */\n      dup5\n        /* \"#utility.yul\":8531:8539   */\n      dup5\n        /* \"#utility.yul\":8525:8529   */\n      dup5\n        /* \"#utility.yul\":8522:8523   */\n      0x01\n        /* \"#utility.yul\":8503:8545   */\n      tag_159\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8488:8545   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8577:8581   */\n      dup2\n        /* \"#utility.yul\":8572:8575   */\n      dup5\n        /* \"#utility.yul\":8568:8582   */\n      div\n        /* \"#utility.yul\":8561:8566   */\n      dup2\n        /* \"#utility.yul\":8558:8583   */\n      gt\n        /* \"#utility.yul\":8555:8606   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8586:8604   */\n      tag_259\n      tag_157\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8555:8606   */\n    tag_258:\n        /* \"#utility.yul\":8635:8639   */\n      dup2\n        /* \"#utility.yul\":8628:8633   */\n      dup2\n        /* \"#utility.yul\":8624:8640   */\n      mul\n        /* \"#utility.yul\":8615:8640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7573:8646   */\n    tag_244:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8652:8933   */\n    tag_78:\n        /* \"#utility.yul\":8710:8715   */\n      0x00\n        /* \"#utility.yul\":8734:8757   */\n      tag_261\n        /* \"#utility.yul\":8752:8756   */\n      dup3\n        /* \"#utility.yul\":8734:8757   */\n      tag_147\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8726:8757   */\n      swap2\n      pop\n        /* \"#utility.yul\":8778:8803   */\n      tag_262\n        /* \"#utility.yul\":8794:8802   */\n      dup4\n        /* \"#utility.yul\":8778:8803   */\n      tag_153\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8766:8803   */\n      swap3\n      pop\n        /* \"#utility.yul\":8822:8926   */\n      tag_263\n        /* \"#utility.yul\":8859:8925   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8849:8857   */\n      dup5\n        /* \"#utility.yul\":8843:8847   */\n      dup5\n        /* \"#utility.yul\":8822:8926   */\n      tag_160\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8813:8926   */\n      swap1\n      pop\n        /* \"#utility.yul\":8652:8933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8939:9119   */\n    tag_161:\n        /* \"#utility.yul\":8987:9064   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8984:8985   */\n      0x00\n        /* \"#utility.yul\":8977:9065   */\n      mstore\n        /* \"#utility.yul\":9084:9088   */\n      0x12\n        /* \"#utility.yul\":9081:9082   */\n      0x04\n        /* \"#utility.yul\":9074:9089   */\n      mstore\n        /* \"#utility.yul\":9108:9112   */\n      0x24\n        /* \"#utility.yul\":9105:9106   */\n      0x00\n        /* \"#utility.yul\":9098:9113   */\n      revert\n        /* \"#utility.yul\":9125:9310   */\n    tag_80:\n        /* \"#utility.yul\":9165:9166   */\n      0x00\n        /* \"#utility.yul\":9182:9202   */\n      tag_266\n        /* \"#utility.yul\":9200:9201   */\n      dup3\n        /* \"#utility.yul\":9182:9202   */\n      tag_147\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9177:9202   */\n      swap2\n      pop\n        /* \"#utility.yul\":9216:9236   */\n      tag_267\n        /* \"#utility.yul\":9234:9235   */\n      dup4\n        /* \"#utility.yul\":9216:9236   */\n      tag_147\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9211:9236   */\n      swap3\n      pop\n        /* \"#utility.yul\":9255:9256   */\n      dup3\n        /* \"#utility.yul\":9245:9280   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":9260:9278   */\n      tag_269\n      tag_161\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9245:9280   */\n    tag_268:\n        /* \"#utility.yul\":9302:9303   */\n      dup3\n        /* \"#utility.yul\":9299:9300   */\n      dup3\n        /* \"#utility.yul\":9295:9304   */\n      div\n        /* \"#utility.yul\":9290:9304   */\n      swap1\n      pop\n        /* \"#utility.yul\":9125:9310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9316:9758   */\n    tag_109:\n        /* \"#utility.yul\":9465:9469   */\n      0x00\n        /* \"#utility.yul\":9503:9505   */\n      0x60\n        /* \"#utility.yul\":9492:9501   */\n      dup3\n        /* \"#utility.yul\":9488:9506   */\n      add\n        /* \"#utility.yul\":9480:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9516:9587   */\n      tag_271\n        /* \"#utility.yul\":9584:9585   */\n      0x00\n        /* \"#utility.yul\":9573:9582   */\n      dup4\n        /* \"#utility.yul\":9569:9586   */\n      add\n        /* \"#utility.yul\":9560:9566   */\n      dup7\n        /* \"#utility.yul\":9516:9587   */\n      tag_155\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9597:9669   */\n      tag_272\n        /* \"#utility.yul\":9665:9667   */\n      0x20\n        /* \"#utility.yul\":9654:9663   */\n      dup4\n        /* \"#utility.yul\":9650:9668   */\n      add\n        /* \"#utility.yul\":9641:9647   */\n      dup6\n        /* \"#utility.yul\":9597:9669   */\n      tag_152\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9679:9751   */\n      tag_273\n        /* \"#utility.yul\":9747:9749   */\n      0x40\n        /* \"#utility.yul\":9736:9745   */\n      dup4\n        /* \"#utility.yul\":9732:9750   */\n      add\n        /* \"#utility.yul\":9723:9729   */\n      dup5\n        /* \"#utility.yul\":9679:9751   */\n      tag_152\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9316:9758   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9764:9955   */\n    tag_128:\n        /* \"#utility.yul\":9804:9807   */\n      0x00\n        /* \"#utility.yul\":9823:9843   */\n      tag_275\n        /* \"#utility.yul\":9841:9842   */\n      dup3\n        /* \"#utility.yul\":9823:9843   */\n      tag_147\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9818:9843   */\n      swap2\n      pop\n        /* \"#utility.yul\":9857:9877   */\n      tag_276\n        /* \"#utility.yul\":9875:9876   */\n      dup4\n        /* \"#utility.yul\":9857:9877   */\n      tag_147\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9852:9877   */\n      swap3\n      pop\n        /* \"#utility.yul\":9900:9901   */\n      dup3\n        /* \"#utility.yul\":9897:9898   */\n      dup3\n        /* \"#utility.yul\":9893:9902   */\n      add\n        /* \"#utility.yul\":9886:9902   */\n      swap1\n      pop\n        /* \"#utility.yul\":9921:9924   */\n      dup1\n        /* \"#utility.yul\":9918:9919   */\n      dup3\n        /* \"#utility.yul\":9915:9925   */\n      gt\n        /* \"#utility.yul\":9912:9948   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":9928:9946   */\n      tag_278\n      tag_157\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9912:9948   */\n    tag_277:\n        /* \"#utility.yul\":9764:9955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122045c5d162503efa5e3714265e9f46d28b83e40b4621d7e4c5d4b2d47276d9074464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1134": {
									"entryPoint": null,
									"id": 1134,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 321,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 454,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 313,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:7",
										"nodeType": "YulBlock",
										"src": "0:10797:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "771:274:7",
													"nodeType": "YulBlock",
													"src": "771:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:7",
																"nodeType": "YulBlock",
																"src": "817:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:7"
																			},
																			"nativeSrc": "819:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:7"
																		},
																		"nativeSrc": "819:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:7"
																		},
																		"nativeSrc": "788:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:7"
																},
																"nativeSrc": "784:32:7",
																"nodeType": "YulFunctionCall",
																"src": "784:32:7"
															},
															"nativeSrc": "781:119:7",
															"nodeType": "YulIf",
															"src": "781:119:7"
														},
														{
															"nativeSrc": "910:128:7",
															"nodeType": "YulBlock",
															"src": "910:128:7",
															"statements": [
																{
																	"nativeSrc": "925:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:7",
																			"nodeType": "YulTypedName",
																			"src": "929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:7",
																	"nodeType": "YulAssignment",
																	"src": "954:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:7"
																				},
																				"nativeSrc": "996:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:7"
																		},
																		"nativeSrc": "964:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:7",
														"nodeType": "YulTypedName",
														"src": "741:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:7",
														"nodeType": "YulTypedName",
														"src": "752:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:7",
														"nodeType": "YulTypedName",
														"src": "764:6:7",
														"type": ""
													}
												],
												"src": "694:351:7"
											},
											{
												"body": {
													"nativeSrc": "1110:40:7",
													"nodeType": "YulBlock",
													"src": "1110:40:7",
													"statements": [
														{
															"nativeSrc": "1121:22:7",
															"nodeType": "YulAssignment",
															"src": "1121:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:7"
																},
																"nativeSrc": "1131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:7",
														"nodeType": "YulTypedName",
														"src": "1093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:7",
														"nodeType": "YulTypedName",
														"src": "1103:6:7",
														"type": ""
													}
												],
												"src": "1051:99:7"
											},
											{
												"body": {
													"nativeSrc": "1184:152:7",
													"nodeType": "YulBlock",
													"src": "1184:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:7"
															},
															"nativeSrc": "1194:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:7"
																},
																"nativeSrc": "1291:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:7"
															},
															"nativeSrc": "1291:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:7"
																},
																"nativeSrc": "1315:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:7"
															},
															"nativeSrc": "1315:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:7"
											},
											{
												"body": {
													"nativeSrc": "1370:152:7",
													"nodeType": "YulBlock",
													"src": "1370:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:7"
																},
																"nativeSrc": "1380:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:7"
															},
															"nativeSrc": "1380:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:7"
																},
																"nativeSrc": "1477:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:7"
															},
															"nativeSrc": "1477:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:7"
											},
											{
												"body": {
													"nativeSrc": "1579:269:7",
													"nodeType": "YulBlock",
													"src": "1579:269:7",
													"statements": [
														{
															"nativeSrc": "1589:22:7",
															"nodeType": "YulAssignment",
															"src": "1589:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:7"
																},
																"nativeSrc": "1599:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:7"
																}
															]
														},
														{
															"nativeSrc": "1620:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:7"
																},
																"nativeSrc": "1646:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:7",
																"nodeType": "YulBlock",
																"src": "1697:51:7",
																"statements": [
																	{
																		"nativeSrc": "1711:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:7"
																			},
																			"nativeSrc": "1721:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:7"
																},
																"nativeSrc": "1670:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:7"
															},
															"nativeSrc": "1667:81:7",
															"nodeType": "YulIf",
															"src": "1667:81:7"
														},
														{
															"body": {
																"nativeSrc": "1800:42:7",
																"nodeType": "YulBlock",
																"src": "1800:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:7"
																			},
																			"nativeSrc": "1814:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:7"
																		},
																		"nativeSrc": "1814:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:7"
																		},
																		"nativeSrc": "1784:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:7"
																},
																"nativeSrc": "1761:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:7"
															},
															"nativeSrc": "1758:84:7",
															"nodeType": "YulIf",
															"src": "1758:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:7",
														"nodeType": "YulTypedName",
														"src": "1563:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:7",
														"nodeType": "YulTypedName",
														"src": "1572:6:7",
														"type": ""
													}
												],
												"src": "1528:320:7"
											},
											{
												"body": {
													"nativeSrc": "1908:87:7",
													"nodeType": "YulBlock",
													"src": "1908:87:7",
													"statements": [
														{
															"nativeSrc": "1918:11:7",
															"nodeType": "YulAssignment",
															"src": "1918:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:7",
																"nodeType": "YulIdentifier",
																"src": "1926:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:7"
																},
																"nativeSrc": "1939:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:7"
															},
															"nativeSrc": "1939:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:7"
														},
														{
															"nativeSrc": "1962:26:7",
															"nodeType": "YulAssignment",
															"src": "1962:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:7"
																},
																"nativeSrc": "1970:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:7",
														"nodeType": "YulTypedName",
														"src": "1895:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:7",
														"nodeType": "YulTypedName",
														"src": "1903:4:7",
														"type": ""
													}
												],
												"src": "1854:141:7"
											},
											{
												"body": {
													"nativeSrc": "2045:49:7",
													"nodeType": "YulBlock",
													"src": "2045:49:7",
													"statements": [
														{
															"nativeSrc": "2055:33:7",
															"nodeType": "YulAssignment",
															"src": "2055:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:7"
																		},
																		"nativeSrc": "2069:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:7"
																},
																"nativeSrc": "2065:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:7",
														"nodeType": "YulTypedName",
														"src": "2028:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:7",
														"nodeType": "YulTypedName",
														"src": "2038:6:7",
														"type": ""
													}
												],
												"src": "2001:93:7"
											},
											{
												"body": {
													"nativeSrc": "2153:54:7",
													"nodeType": "YulBlock",
													"src": "2153:54:7",
													"statements": [
														{
															"nativeSrc": "2163:37:7",
															"nodeType": "YulAssignment",
															"src": "2163:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:7"
																},
																"nativeSrc": "2184:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:7",
														"nodeType": "YulTypedName",
														"src": "2128:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:7",
														"nodeType": "YulTypedName",
														"src": "2134:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:7",
														"nodeType": "YulTypedName",
														"src": "2144:8:7",
														"type": ""
													}
												],
												"src": "2100:107:7"
											},
											{
												"body": {
													"nativeSrc": "2289:317:7",
													"nodeType": "YulBlock",
													"src": "2289:317:7",
													"statements": [
														{
															"nativeSrc": "2299:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:7"
																},
																"nativeSrc": "2316:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:7"
																},
																"nativeSrc": "2355:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:7",
															"nodeType": "YulAssignment",
															"src": "2461:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:7"
																},
																"nativeSrc": "2473:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:7"
																}
															]
														},
														{
															"nativeSrc": "2521:30:7",
															"nodeType": "YulAssignment",
															"src": "2521:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:7"
																		},
																		"nativeSrc": "2541:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:7"
																},
																"nativeSrc": "2530:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:7"
																}
															]
														},
														{
															"nativeSrc": "2560:40:7",
															"nodeType": "YulAssignment",
															"src": "2560:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:7"
																		},
																		"nativeSrc": "2580:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:7"
																},
																"nativeSrc": "2570:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:7",
														"nodeType": "YulTypedName",
														"src": "2250:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:7",
														"nodeType": "YulTypedName",
														"src": "2257:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:7",
														"nodeType": "YulTypedName",
														"src": "2269:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:7",
														"nodeType": "YulTypedName",
														"src": "2282:6:7",
														"type": ""
													}
												],
												"src": "2213:393:7"
											},
											{
												"body": {
													"nativeSrc": "2644:28:7",
													"nodeType": "YulBlock",
													"src": "2644:28:7",
													"statements": [
														{
															"nativeSrc": "2654:12:7",
															"nodeType": "YulAssignment",
															"src": "2654:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:7",
																"nodeType": "YulIdentifier",
																"src": "2661:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:7",
														"nodeType": "YulTypedName",
														"src": "2630:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:7",
														"nodeType": "YulTypedName",
														"src": "2640:3:7",
														"type": ""
													}
												],
												"src": "2612:60:7"
											},
											{
												"body": {
													"nativeSrc": "2738:82:7",
													"nodeType": "YulBlock",
													"src": "2738:82:7",
													"statements": [
														{
															"nativeSrc": "2748:66:7",
															"nodeType": "YulAssignment",
															"src": "2748:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:7"
																				},
																				"nativeSrc": "2788:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:7"
																		},
																		"nativeSrc": "2779:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:7"
																},
																"nativeSrc": "2761:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:7",
														"nodeType": "YulTypedName",
														"src": "2718:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:7",
														"nodeType": "YulTypedName",
														"src": "2728:9:7",
														"type": ""
													}
												],
												"src": "2678:142:7"
											},
											{
												"body": {
													"nativeSrc": "2873:28:7",
													"nodeType": "YulBlock",
													"src": "2873:28:7",
													"statements": [
														{
															"nativeSrc": "2883:12:7",
															"nodeType": "YulAssignment",
															"src": "2883:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:7",
																"nodeType": "YulIdentifier",
																"src": "2890:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:7",
														"nodeType": "YulTypedName",
														"src": "2859:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:7",
														"nodeType": "YulTypedName",
														"src": "2869:3:7",
														"type": ""
													}
												],
												"src": "2826:75:7"
											},
											{
												"body": {
													"nativeSrc": "2983:193:7",
													"nodeType": "YulBlock",
													"src": "2983:193:7",
													"statements": [
														{
															"nativeSrc": "2993:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:7"
																},
																"nativeSrc": "3017:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:7"
																				},
																				"nativeSrc": "3106:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:7"
																				},
																				"nativeSrc": "3127:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:7"
																		},
																		"nativeSrc": "3078:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:7"
																},
																"nativeSrc": "3065:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:7"
															},
															"nativeSrc": "3065:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:7",
														"nodeType": "YulTypedName",
														"src": "2960:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:7",
														"nodeType": "YulTypedName",
														"src": "2966:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:7",
														"nodeType": "YulTypedName",
														"src": "2974:7:7",
														"type": ""
													}
												],
												"src": "2907:269:7"
											},
											{
												"body": {
													"nativeSrc": "3231:24:7",
													"nodeType": "YulBlock",
													"src": "3231:24:7",
													"statements": [
														{
															"nativeSrc": "3241:8:7",
															"nodeType": "YulAssignment",
															"src": "3241:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:7",
																"nodeType": "YulLiteral",
																"src": "3248:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:7",
														"nodeType": "YulTypedName",
														"src": "3227:3:7",
														"type": ""
													}
												],
												"src": "3182:73:7"
											},
											{
												"body": {
													"nativeSrc": "3314:136:7",
													"nodeType": "YulBlock",
													"src": "3314:136:7",
													"statements": [
														{
															"nativeSrc": "3324:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:7"
																},
																"nativeSrc": "3338:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:7"
																},
																"nativeSrc": "3379:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:7"
															},
															"nativeSrc": "3379:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:7",
														"nodeType": "YulTypedName",
														"src": "3300:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"src": "3261:189:7"
											},
											{
												"body": {
													"nativeSrc": "3506:136:7",
													"nodeType": "YulBlock",
													"src": "3506:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:7",
																"nodeType": "YulBlock",
																"src": "3573:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:7"
																			},
																			"nativeSrc": "3587:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:7"
																		},
																		"nativeSrc": "3587:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:7"
																},
																"nativeSrc": "3523:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:7"
															},
															"nativeSrc": "3516:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:7",
																"nodeType": "YulBlock",
																"src": "3538:26:7",
																"statements": [
																	{
																		"nativeSrc": "3540:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:7"
																			},
																			"nativeSrc": "3549:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:7",
																"nodeType": "YulBlock",
																"src": "3520:2:7",
																"statements": []
															},
															"src": "3516:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:7",
														"nodeType": "YulTypedName",
														"src": "3494:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:7",
														"nodeType": "YulTypedName",
														"src": "3501:3:7",
														"type": ""
													}
												],
												"src": "3456:186:7"
											},
											{
												"body": {
													"nativeSrc": "3727:464:7",
													"nodeType": "YulBlock",
													"src": "3727:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:7",
																"nodeType": "YulBlock",
																"src": "3753:431:7",
																"statements": [
																	{
																		"nativeSrc": "3767:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:7"
																			},
																			"nativeSrc": "3783:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:7",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:7"
																					},
																					"nativeSrc": "3867:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:7"
																			},
																			"nativeSrc": "3853:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:7",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:7",
																			"nodeType": "YulBlock",
																			"src": "4054:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:7"
																			},
																			"nativeSrc": "4035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:7"
																		},
																		"nativeSrc": "4032:49:7",
																		"nodeType": "YulIf",
																		"src": "4032:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:7"
																							},
																							"nativeSrc": "4150:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:7"
																					},
																					"nativeSrc": "4136:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:7"
																			},
																			"nativeSrc": "4094:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:7"
																		},
																		"nativeSrc": "4094:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:7"
																},
																"nativeSrc": "3741:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:7"
															},
															"nativeSrc": "3738:446:7",
															"nodeType": "YulIf",
															"src": "3738:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:7",
														"nodeType": "YulTypedName",
														"src": "3703:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:7",
														"nodeType": "YulTypedName",
														"src": "3710:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:7",
														"nodeType": "YulTypedName",
														"src": "3715:10:7",
														"type": ""
													}
												],
												"src": "3648:543:7"
											},
											{
												"body": {
													"nativeSrc": "4260:54:7",
													"nodeType": "YulBlock",
													"src": "4260:54:7",
													"statements": [
														{
															"nativeSrc": "4270:37:7",
															"nodeType": "YulAssignment",
															"src": "4270:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:7"
																},
																"nativeSrc": "4291:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:7",
														"nodeType": "YulTypedName",
														"src": "4235:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:7",
														"nodeType": "YulTypedName",
														"src": "4241:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:7",
														"nodeType": "YulTypedName",
														"src": "4251:8:7",
														"type": ""
													}
												],
												"src": "4197:117:7"
											},
											{
												"body": {
													"nativeSrc": "4371:118:7",
													"nodeType": "YulBlock",
													"src": "4371:118:7",
													"statements": [
														{
															"nativeSrc": "4381:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:7"
																				},
																				"nativeSrc": "4426:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:7"
																				},
																				"nativeSrc": "4441:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:7"
																		},
																		"nativeSrc": "4397:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:7"
																},
																"nativeSrc": "4393:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:7",
															"nodeType": "YulAssignment",
															"src": "4458:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:7"
																},
																"nativeSrc": "4468:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:7",
														"nodeType": "YulTypedName",
														"src": "4348:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:7",
														"nodeType": "YulTypedName",
														"src": "4354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:7",
														"nodeType": "YulTypedName",
														"src": "4364:6:7",
														"type": ""
													}
												],
												"src": "4320:169:7"
											},
											{
												"body": {
													"nativeSrc": "4575:214:7",
													"nodeType": "YulBlock",
													"src": "4575:214:7",
													"statements": [
														{
															"nativeSrc": "4708:37:7",
															"nodeType": "YulAssignment",
															"src": "4708:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:7"
																},
																"nativeSrc": "4716:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:7"
																}
															]
														},
														{
															"nativeSrc": "4754:29:7",
															"nodeType": "YulAssignment",
															"src": "4754:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:7"
																		},
																		"nativeSrc": "4771:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:7"
																},
																"nativeSrc": "4762:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:7",
														"nodeType": "YulTypedName",
														"src": "4556:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:7",
														"nodeType": "YulTypedName",
														"src": "4562:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:7",
														"nodeType": "YulTypedName",
														"src": "4570:4:7",
														"type": ""
													}
												],
												"src": "4494:295:7"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:7",
													"nodeType": "YulBlock",
													"src": "4886:1303:7",
													"statements": [
														{
															"nativeSrc": "4897:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:7"
																},
																"nativeSrc": "4911:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:7",
																"nodeType": "YulBlock",
																"src": "5033:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:7"
																			},
																			"nativeSrc": "5035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:7"
																		},
																		"nativeSrc": "5035:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:7"
																},
																"nativeSrc": "5002:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:7"
															},
															"nativeSrc": "4999:56:7",
															"nodeType": "YulIf",
															"src": "4999:56:7"
														},
														{
															"nativeSrc": "5065:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:7"
																		},
																		"nativeSrc": "5105:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:7"
																},
																"nativeSrc": "5079:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:7"
																},
																"nativeSrc": "5164:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:7"
															},
															"nativeSrc": "5164:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:7"
														},
														{
															"nativeSrc": "5241:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:7",
																"nodeType": "YulLiteral",
																"src": "5258:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:7",
															"nodeType": "YulAssignment",
															"src": "5269:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:7",
																"nodeType": "YulLiteral",
																"src": "5282:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:7",
																		"nodeType": "YulBlock",
																		"src": "5333:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:7"
																							},
																							"nativeSrc": "5374:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:7"
																					},
																					"nativeSrc": "5362:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:7"
																					},
																					"nativeSrc": "5412:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:7",
																					"nodeType": "YulBlock",
																					"src": "5530:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:7"
																												},
																												"nativeSrc": "5569:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:7"
																										},
																										"nativeSrc": "5563:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:7"
																								},
																								"nativeSrc": "5548:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:7"
																							},
																							"nativeSrc": "5548:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:7"
																						},
																						{
																							"nativeSrc": "5607:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:7"
																								},
																								"nativeSrc": "5617:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:7"
																								},
																								"nativeSrc": "5661:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:7"
																					},
																					"nativeSrc": "5493:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:7"
																				},
																				"nativeSrc": "5485:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:7",
																					"nodeType": "YulBlock",
																					"src": "5508:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:7"
																								},
																								"nativeSrc": "5515:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:7",
																					"nodeType": "YulBlock",
																					"src": "5489:3:7",
																					"statements": []
																				},
																				"src": "5485:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:7",
																					"nodeType": "YulBlock",
																					"src": "5729:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:7"
																										},
																										"nativeSrc": "5770:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:7"
																								},
																								"nativeSrc": "5764:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:7",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:7"
																												},
																												"nativeSrc": "5852:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:7"
																										},
																										"nativeSrc": "5822:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:7"
																								},
																								"nativeSrc": "5807:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:7"
																							},
																							"nativeSrc": "5807:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:7"
																					},
																					"nativeSrc": "5709:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:7"
																				},
																				"nativeSrc": "5706:179:7",
																				"nodeType": "YulIf",
																				"src": "5706:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:7",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:7"
																									},
																									"nativeSrc": "5915:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:7",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:7"
																							},
																							"nativeSrc": "5911:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:7"
																					},
																					"nativeSrc": "5898:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:7"
																				},
																				"nativeSrc": "5898:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:7",
																	"nodeType": "YulCase",
																	"src": "5326:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:7",
																		"nodeType": "YulBlock",
																		"src": "5961:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:7",
																					"nodeType": "YulBlock",
																					"src": "6012:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:7"
																										},
																										"nativeSrc": "6045:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:7"
																								},
																								"nativeSrc": "6039:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:7"
																				},
																				"nativeSrc": "6002:77:7",
																				"nodeType": "YulIf",
																				"src": "6002:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:7"
																							},
																							"nativeSrc": "6105:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:7"
																					},
																					"nativeSrc": "6092:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:7"
																				},
																				"nativeSrc": "6092:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:7"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:7",
																	"nodeType": "YulCase",
																	"src": "5953:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:7"
																},
																"nativeSrc": "5303:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:7"
															},
															"nativeSrc": "5296:887:7",
															"nodeType": "YulSwitch",
															"src": "5296:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:7",
														"nodeType": "YulTypedName",
														"src": "4875:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:7",
														"nodeType": "YulTypedName",
														"src": "4881:3:7",
														"type": ""
													}
												],
												"src": "4794:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6223:152:7",
													"nodeType": "YulBlock",
													"src": "6223:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6243:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:7"
																},
																"nativeSrc": "6233:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6233:88:7"
															},
															"nativeSrc": "6233:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6233:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:7"
																},
																"nativeSrc": "6330:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6330:15:7"
															},
															"nativeSrc": "6330:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6361:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6361:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6364:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6364:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6354:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:7"
																},
																"nativeSrc": "6354:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6354:15:7"
															},
															"nativeSrc": "6354:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6354:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6195:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6195:180:7"
											},
											{
												"body": {
													"nativeSrc": "6432:51:7",
													"nodeType": "YulBlock",
													"src": "6432:51:7",
													"statements": [
														{
															"nativeSrc": "6442:34:7",
															"nodeType": "YulAssignment",
															"src": "6442:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6470:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6470:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6463:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:7"
																},
																"nativeSrc": "6463:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6463:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6442:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6442:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6381:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6413:5:7",
														"nodeType": "YulTypedName",
														"src": "6413:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6423:8:7",
														"nodeType": "YulTypedName",
														"src": "6423:8:7",
														"type": ""
													}
												],
												"src": "6381:102:7"
											},
											{
												"body": {
													"nativeSrc": "6562:775:7",
													"nodeType": "YulBlock",
													"src": "6562:775:7",
													"statements": [
														{
															"nativeSrc": "6572:15:7",
															"nodeType": "YulAssignment",
															"src": "6572:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "6581:6:7",
																"nodeType": "YulIdentifier",
																"src": "6581:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6572:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6572:5:7"
																}
															]
														},
														{
															"nativeSrc": "6596:14:7",
															"nodeType": "YulAssignment",
															"src": "6596:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "6605:5:7",
																"nodeType": "YulIdentifier",
																"src": "6605:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6596:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6596:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6654:677:7",
																"nodeType": "YulBlock",
																"src": "6654:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6742:22:7",
																			"nodeType": "YulBlock",
																			"src": "6742:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6744:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "6744:16:7"
																						},
																						"nativeSrc": "6744:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6744:18:7"
																					},
																					"nativeSrc": "6744:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "6744:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6720:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6720:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6730:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6730:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6735:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6735:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6726:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6726:3:7"
																					},
																					"nativeSrc": "6726:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6726:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6717:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6717:2:7"
																			},
																			"nativeSrc": "6717:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:24:7"
																		},
																		"nativeSrc": "6714:50:7",
																		"nodeType": "YulIf",
																		"src": "6714:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "6809:419:7",
																			"nodeType": "YulBlock",
																			"src": "6809:419:7",
																			"statements": [
																				{
																					"nativeSrc": "7189:25:7",
																					"nodeType": "YulAssignment",
																					"src": "7189:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7202:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "7202:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7209:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "7209:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7198:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7198:3:7"
																						},
																						"nativeSrc": "7198:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7198:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7189:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7189:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6784:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6784:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6794:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6794:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6780:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6780:3:7"
																			},
																			"nativeSrc": "6780:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6780:16:7"
																		},
																		"nativeSrc": "6777:451:7",
																		"nodeType": "YulIf",
																		"src": "6777:451:7"
																	},
																	{
																		"nativeSrc": "7241:23:7",
																		"nodeType": "YulAssignment",
																		"src": "7241:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7253:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7253:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7259:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7259:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7249:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7249:3:7"
																			},
																			"nativeSrc": "7249:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7249:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7241:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7241:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7277:44:7",
																		"nodeType": "YulAssignment",
																		"src": "7277:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7312:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7312:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7289:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "7289:22:7"
																			},
																			"nativeSrc": "7289:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7289:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7277:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "7277:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6630:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6630:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6640:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6640:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6627:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6627:2:7"
																},
																"nativeSrc": "6627:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6627:15:7"
															},
															"nativeSrc": "6619:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6643:2:7",
																"nodeType": "YulBlock",
																"src": "6643:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6623:3:7",
																"nodeType": "YulBlock",
																"src": "6623:3:7",
																"statements": []
															},
															"src": "6619:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6489:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6517:6:7",
														"nodeType": "YulTypedName",
														"src": "6517:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6525:5:7",
														"nodeType": "YulTypedName",
														"src": "6525:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6532:8:7",
														"nodeType": "YulTypedName",
														"src": "6532:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6542:3:7",
														"nodeType": "YulTypedName",
														"src": "6542:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6550:5:7",
														"nodeType": "YulTypedName",
														"src": "6550:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6557:4:7",
														"nodeType": "YulTypedName",
														"src": "6557:4:7",
														"type": ""
													}
												],
												"src": "6489:848:7"
											},
											{
												"body": {
													"nativeSrc": "7403:1013:7",
													"nodeType": "YulBlock",
													"src": "7403:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:20:7",
																"nodeType": "YulBlock",
																"src": "7598:20:7",
																"statements": [
																	{
																		"nativeSrc": "7600:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7600:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7609:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7609:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7600:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7600:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7611:5:7",
																		"nodeType": "YulLeave",
																		"src": "7611:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7588:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7588:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7581:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:7"
																},
																"nativeSrc": "7581:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7581:16:7"
															},
															"nativeSrc": "7578:40:7",
															"nodeType": "YulIf",
															"src": "7578:40:7"
														},
														{
															"body": {
																"nativeSrc": "7643:20:7",
																"nodeType": "YulBlock",
																"src": "7643:20:7",
																"statements": [
																	{
																		"nativeSrc": "7645:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7645:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7654:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7654:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7645:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7645:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7656:5:7",
																		"nodeType": "YulLeave",
																		"src": "7656:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7637:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7637:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7630:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:7"
																},
																"nativeSrc": "7630:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7630:12:7"
															},
															"nativeSrc": "7627:36:7",
															"nodeType": "YulIf",
															"src": "7627:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7773:20:7",
																		"nodeType": "YulBlock",
																		"src": "7773:20:7",
																		"statements": [
																			{
																				"nativeSrc": "7775:10:7",
																				"nodeType": "YulAssignment",
																				"src": "7775:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7784:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7784:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7775:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7775:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7786:5:7",
																				"nodeType": "YulLeave",
																				"src": "7786:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7766:27:7",
																	"nodeType": "YulCase",
																	"src": "7766:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7771:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7817:176:7",
																		"nodeType": "YulBlock",
																		"src": "7817:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7852:22:7",
																					"nodeType": "YulBlock",
																					"src": "7852:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7854:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7854:16:7"
																								},
																								"nativeSrc": "7854:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7854:18:7"
																							},
																							"nativeSrc": "7854:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7854:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7837:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7837:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7847:3:7",
																							"nodeType": "YulLiteral",
																							"src": "7847:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7834:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7834:2:7"
																					},
																					"nativeSrc": "7834:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7834:17:7"
																				},
																				"nativeSrc": "7831:43:7",
																				"nodeType": "YulIf",
																				"src": "7831:43:7"
																			},
																			{
																				"nativeSrc": "7887:25:7",
																				"nodeType": "YulAssignment",
																				"src": "7887:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7900:1:7",
																							"nodeType": "YulLiteral",
																							"src": "7900:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7903:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7903:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7896:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7896:3:7"
																					},
																					"nativeSrc": "7896:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7896:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7887:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7887:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7943:22:7",
																					"nodeType": "YulBlock",
																					"src": "7943:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7945:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7945:16:7"
																								},
																								"nativeSrc": "7945:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7945:18:7"
																							},
																							"nativeSrc": "7945:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7945:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7938:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7938:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7928:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7928:2:7"
																					},
																					"nativeSrc": "7928:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7928:14:7"
																				},
																				"nativeSrc": "7925:40:7",
																				"nodeType": "YulIf",
																				"src": "7925:40:7"
																			},
																			{
																				"nativeSrc": "7978:5:7",
																				"nodeType": "YulLeave",
																				"src": "7978:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7802:191:7",
																	"nodeType": "YulCase",
																	"src": "7802:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7807:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7723:4:7",
																"nodeType": "YulIdentifier",
																"src": "7723:4:7"
															},
															"nativeSrc": "7716:277:7",
															"nodeType": "YulSwitch",
															"src": "7716:277:7"
														},
														{
															"body": {
																"nativeSrc": "8125:123:7",
																"nodeType": "YulBlock",
																"src": "8125:123:7",
																"statements": [
																	{
																		"nativeSrc": "8139:28:7",
																		"nodeType": "YulAssignment",
																		"src": "8139:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8152:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8152:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8158:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8158:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8148:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8148:3:7"
																			},
																			"nativeSrc": "8148:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8148:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8139:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8139:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8198:22:7",
																			"nodeType": "YulBlock",
																			"src": "8198:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8200:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8200:16:7"
																						},
																						"nativeSrc": "8200:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8200:18:7"
																					},
																					"nativeSrc": "8200:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8200:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8186:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8186:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8183:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8183:2:7"
																			},
																			"nativeSrc": "8183:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8183:14:7"
																		},
																		"nativeSrc": "8180:40:7",
																		"nodeType": "YulIf",
																		"src": "8180:40:7"
																	},
																	{
																		"nativeSrc": "8233:5:7",
																		"nodeType": "YulLeave",
																		"src": "8233:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8028:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8028:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8034:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8034:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8025:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8025:2:7"
																				},
																				"nativeSrc": "8025:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8025:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8042:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8042:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8052:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8052:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8039:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8039:2:7"
																				},
																				"nativeSrc": "8039:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8039:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8021:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:7"
																		},
																		"nativeSrc": "8021:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8077:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8077:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8083:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8083:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8074:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8074:2:7"
																				},
																				"nativeSrc": "8074:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8074:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8092:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8092:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8102:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8102:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8089:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8089:2:7"
																				},
																				"nativeSrc": "8089:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8089:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8070:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:7"
																		},
																		"nativeSrc": "8070:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8070:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8005:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8005:2:7"
																},
																"nativeSrc": "8005:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8005:111:7"
															},
															"nativeSrc": "8002:246:7",
															"nodeType": "YulIf",
															"src": "8002:246:7"
														},
														{
															"nativeSrc": "8258:57:7",
															"nodeType": "YulAssignment",
															"src": "8258:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8292:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8295:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8295:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8301:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8301:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8311:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8273:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8273:18:7"
																},
																"nativeSrc": "8273:42:7",
																"nodeType": "YulFunctionCall",
																"src": "8273:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8258:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8258:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "8265:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8354:22:7",
																"nodeType": "YulBlock",
																"src": "8354:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8356:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8356:16:7"
																			},
																			"nativeSrc": "8356:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8356:18:7"
																		},
																		"nativeSrc": "8356:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8331:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8331:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8342:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8342:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8347:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:7"
																		},
																		"nativeSrc": "8338:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8328:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8328:2:7"
																},
																"nativeSrc": "8328:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8328:25:7"
															},
															"nativeSrc": "8325:51:7",
															"nodeType": "YulIf",
															"src": "8325:51:7"
														},
														{
															"nativeSrc": "8385:25:7",
															"nodeType": "YulAssignment",
															"src": "8385:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8398:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8398:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8405:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8405:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:7"
																},
																"nativeSrc": "8394:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8394:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8385:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8385:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7343:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7373:4:7",
														"nodeType": "YulTypedName",
														"src": "7373:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7379:8:7",
														"nodeType": "YulTypedName",
														"src": "7379:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7389:3:7",
														"nodeType": "YulTypedName",
														"src": "7389:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7397:5:7",
														"nodeType": "YulTypedName",
														"src": "7397:5:7",
														"type": ""
													}
												],
												"src": "7343:1073:7"
											},
											{
												"body": {
													"nativeSrc": "8465:43:7",
													"nodeType": "YulBlock",
													"src": "8465:43:7",
													"statements": [
														{
															"nativeSrc": "8475:27:7",
															"nodeType": "YulAssignment",
															"src": "8475:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8490:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8497:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8497:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:7"
																},
																"nativeSrc": "8486:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8486:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8475:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8475:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8422:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8447:5:7",
														"nodeType": "YulTypedName",
														"src": "8447:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8457:7:7",
														"nodeType": "YulTypedName",
														"src": "8457:7:7",
														"type": ""
													}
												],
												"src": "8422:86:7"
											},
											{
												"body": {
													"nativeSrc": "8578:217:7",
													"nodeType": "YulBlock",
													"src": "8578:217:7",
													"statements": [
														{
															"nativeSrc": "8588:31:7",
															"nodeType": "YulAssignment",
															"src": "8588:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8614:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8614:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8596:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8596:17:7"
																},
																"nativeSrc": "8596:23:7",
																"nodeType": "YulFunctionCall",
																"src": "8596:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8588:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8588:4:7"
																}
															]
														},
														{
															"nativeSrc": "8628:37:7",
															"nodeType": "YulAssignment",
															"src": "8628:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8656:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8656:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8640:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8640:15:7"
																},
																"nativeSrc": "8640:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8640:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8628:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8628:8:7"
																}
															]
														},
														{
															"nativeSrc": "8675:113:7",
															"nodeType": "YulAssignment",
															"src": "8675:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8705:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8705:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8711:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8711:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8721:66:7",
																		"nodeType": "YulLiteral",
																		"src": "8721:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8684:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "8684:20:7"
																},
																"nativeSrc": "8684:104:7",
																"nodeType": "YulFunctionCall",
																"src": "8684:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8675:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8675:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8514:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8553:4:7",
														"nodeType": "YulTypedName",
														"src": "8553:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8559:8:7",
														"nodeType": "YulTypedName",
														"src": "8559:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8572:5:7",
														"nodeType": "YulTypedName",
														"src": "8572:5:7",
														"type": ""
													}
												],
												"src": "8514:281:7"
											},
											{
												"body": {
													"nativeSrc": "8849:362:7",
													"nodeType": "YulBlock",
													"src": "8849:362:7",
													"statements": [
														{
															"nativeSrc": "8859:25:7",
															"nodeType": "YulAssignment",
															"src": "8859:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8882:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8882:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8864:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8864:17:7"
																},
																"nativeSrc": "8864:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8864:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8859:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8859:1:7"
																}
															]
														},
														{
															"nativeSrc": "8893:25:7",
															"nodeType": "YulAssignment",
															"src": "8893:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8898:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8898:17:7"
																},
																"nativeSrc": "8898:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8898:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8893:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8893:1:7"
																}
															]
														},
														{
															"nativeSrc": "8927:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8927:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8950:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8946:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:7"
																},
																"nativeSrc": "8946:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8946:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8931:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8931:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8964:41:7",
															"nodeType": "YulAssignment",
															"src": "8964:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8993:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8993:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8975:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8975:17:7"
																},
																"nativeSrc": "8975:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8975:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8964:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9182:22:7",
																"nodeType": "YulBlock",
																"src": "9182:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9184:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9184:16:7"
																			},
																			"nativeSrc": "9184:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9184:18:7"
																		},
																		"nativeSrc": "9184:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9115:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9115:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9108:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9108:6:7"
																				},
																				"nativeSrc": "9108:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9108:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9138:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9138:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9145:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9145:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9154:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9154:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9141:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9141:3:7"
																						},
																						"nativeSrc": "9141:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9141:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9135:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9135:2:7"
																				},
																				"nativeSrc": "9135:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9135:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9088:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9088:2:7"
																		},
																		"nativeSrc": "9088:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:7"
																},
																"nativeSrc": "9068:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9068:113:7"
															},
															"nativeSrc": "9065:139:7",
															"nodeType": "YulIf",
															"src": "9065:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8801:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8832:1:7",
														"nodeType": "YulTypedName",
														"src": "8832:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8835:1:7",
														"nodeType": "YulTypedName",
														"src": "8835:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8841:7:7",
														"nodeType": "YulTypedName",
														"src": "8841:7:7",
														"type": ""
													}
												],
												"src": "8801:410:7"
											},
											{
												"body": {
													"nativeSrc": "9262:81:7",
													"nodeType": "YulBlock",
													"src": "9262:81:7",
													"statements": [
														{
															"nativeSrc": "9272:65:7",
															"nodeType": "YulAssignment",
															"src": "9272:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9287:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:42:7",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9283:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:7"
																},
																"nativeSrc": "9283:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9283:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9272:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9217:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9244:5:7",
														"nodeType": "YulTypedName",
														"src": "9244:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9254:7:7",
														"nodeType": "YulTypedName",
														"src": "9254:7:7",
														"type": ""
													}
												],
												"src": "9217:126:7"
											},
											{
												"body": {
													"nativeSrc": "9394:51:7",
													"nodeType": "YulBlock",
													"src": "9394:51:7",
													"statements": [
														{
															"nativeSrc": "9404:35:7",
															"nodeType": "YulAssignment",
															"src": "9404:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9433:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9415:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:7"
																},
																"nativeSrc": "9415:24:7",
																"nodeType": "YulFunctionCall",
																"src": "9415:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9404:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9349:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9376:5:7",
														"nodeType": "YulTypedName",
														"src": "9376:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9386:7:7",
														"nodeType": "YulTypedName",
														"src": "9386:7:7",
														"type": ""
													}
												],
												"src": "9349:96:7"
											},
											{
												"body": {
													"nativeSrc": "9516:53:7",
													"nodeType": "YulBlock",
													"src": "9516:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:7"
																		},
																		"nativeSrc": "9538:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:7"
																},
																"nativeSrc": "9526:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:7"
															},
															"nativeSrc": "9526:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:7",
														"nodeType": "YulTypedName",
														"src": "9504:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:7",
														"nodeType": "YulTypedName",
														"src": "9511:3:7",
														"type": ""
													}
												],
												"src": "9451:118:7"
											},
											{
												"body": {
													"nativeSrc": "9673:124:7",
													"nodeType": "YulBlock",
													"src": "9673:124:7",
													"statements": [
														{
															"nativeSrc": "9683:26:7",
															"nodeType": "YulAssignment",
															"src": "9683:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:7"
																},
																"nativeSrc": "9691:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:7"
																		},
																		"nativeSrc": "9772:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:7"
																},
																"nativeSrc": "9719:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:7"
															},
															"nativeSrc": "9719:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:7",
														"nodeType": "YulTypedName",
														"src": "9645:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:7",
														"nodeType": "YulTypedName",
														"src": "9657:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:7",
														"nodeType": "YulTypedName",
														"src": "9668:4:7",
														"type": ""
													}
												],
												"src": "9575:222:7"
											},
											{
												"body": {
													"nativeSrc": "9847:147:7",
													"nodeType": "YulBlock",
													"src": "9847:147:7",
													"statements": [
														{
															"nativeSrc": "9857:25:7",
															"nodeType": "YulAssignment",
															"src": "9857:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:7"
																},
																"nativeSrc": "9862:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:7"
																}
															]
														},
														{
															"nativeSrc": "9891:25:7",
															"nodeType": "YulAssignment",
															"src": "9891:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:7"
																},
																"nativeSrc": "9896:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:7"
																}
															]
														},
														{
															"nativeSrc": "9925:16:7",
															"nodeType": "YulAssignment",
															"src": "9925:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:7"
																},
																"nativeSrc": "9932:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:7",
																"nodeType": "YulBlock",
																"src": "9965:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:7"
																			},
																			"nativeSrc": "9967:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:7"
																		},
																		"nativeSrc": "9967:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:7"
																},
																"nativeSrc": "9954:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:7"
															},
															"nativeSrc": "9951:36:7",
															"nodeType": "YulIf",
															"src": "9951:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:7",
														"nodeType": "YulTypedName",
														"src": "9834:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:7",
														"nodeType": "YulTypedName",
														"src": "9837:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:7",
														"nodeType": "YulTypedName",
														"src": "9843:3:7",
														"type": ""
													}
												],
												"src": "9803:191:7"
											},
											{
												"body": {
													"nativeSrc": "10065:53:7",
													"nodeType": "YulBlock",
													"src": "10065:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:7"
																		},
																		"nativeSrc": "10087:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:7"
																},
																"nativeSrc": "10075:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:7"
															},
															"nativeSrc": "10075:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:7",
														"nodeType": "YulTypedName",
														"src": "10053:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:7",
														"nodeType": "YulTypedName",
														"src": "10060:3:7",
														"type": ""
													}
												],
												"src": "10000:118:7"
											},
											{
												"body": {
													"nativeSrc": "10278:288:7",
													"nodeType": "YulBlock",
													"src": "10278:288:7",
													"statements": [
														{
															"nativeSrc": "10288:26:7",
															"nodeType": "YulAssignment",
															"src": "10288:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:7"
																},
																"nativeSrc": "10296:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:7"
																		},
																		"nativeSrc": "10377:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:7"
																},
																"nativeSrc": "10324:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:7"
															},
															"nativeSrc": "10324:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:7"
																		},
																		"nativeSrc": "10458:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:7"
																},
																"nativeSrc": "10405:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:7"
															},
															"nativeSrc": "10405:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:7"
																		},
																		"nativeSrc": "10540:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:7"
																},
																"nativeSrc": "10487:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:7"
															},
															"nativeSrc": "10487:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:7",
														"nodeType": "YulTypedName",
														"src": "10234:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:7",
														"nodeType": "YulTypedName",
														"src": "10246:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:7",
														"nodeType": "YulTypedName",
														"src": "10254:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:7",
														"nodeType": "YulTypedName",
														"src": "10262:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:7",
														"nodeType": "YulTypedName",
														"src": "10273:4:7",
														"type": ""
													}
												],
												"src": "10124:442:7"
											},
											{
												"body": {
													"nativeSrc": "10670:124:7",
													"nodeType": "YulBlock",
													"src": "10670:124:7",
													"statements": [
														{
															"nativeSrc": "10680:26:7",
															"nodeType": "YulAssignment",
															"src": "10680:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:7"
																},
																"nativeSrc": "10688:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:7"
																		},
																		"nativeSrc": "10769:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:7"
																},
																"nativeSrc": "10716:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:7"
															},
															"nativeSrc": "10716:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:7",
														"nodeType": "YulTypedName",
														"src": "10642:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:7",
														"nodeType": "YulTypedName",
														"src": "10654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:7",
														"nodeType": "YulTypedName",
														"src": "10665:4:7",
														"type": ""
													}
												],
												"src": "10572:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611a8d380380611a8d83398181016040528101906100319190610416565b6040518060400160405280600881526020017f4d7920546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d544b4e0000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610675565b5080600490816100bc9190610675565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101333361011161013960201b60201c565b600a61011d91906108ac565b8361012891906108f6565b61014160201b60201c565b50610a1f565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101b1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101a89190610976565b60405180910390fd5b6101c25f83836101c660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610216578060025f82825461020a919061098f565b925050819055506102e4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561029f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610296939291906109d1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361032b578060025f8282540392505081905550610375565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103d29190610a06565b60405180910390a3505050565b5f5ffd5b5f819050919050565b6103f5816103e3565b81146103ff575f5ffd5b50565b5f81519050610410816103ec565b92915050565b5f6020828403121561042b5761042a6103df565b5b5f61043884828501610402565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104bc57607f821691505b6020821081036104cf576104ce610478565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105317fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104f6565b61053b86836104f6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61057661057161056c846103e3565b610553565b6103e3565b9050919050565b5f819050919050565b61058f8361055c565b6105a361059b8261057d565b848454610502565b825550505050565b5f5f905090565b6105ba6105ab565b6105c5818484610586565b505050565b5b818110156105e8576105dd5f826105b2565b6001810190506105cb565b5050565b601f82111561062d576105fe816104d5565b610607846104e7565b81016020851015610616578190505b61062a610622856104e7565b8301826105ca565b50505b505050565b5f82821c905092915050565b5f61064d5f1984600802610632565b1980831691505092915050565b5f610665838361063e565b9150826002028217905092915050565b61067e82610441565b67ffffffffffffffff8111156106975761069661044b565b5b6106a182546104a5565b6106ac8282856105ec565b5f60209050601f8311600181146106dd575f84156106cb578287015190505b6106d5858261065a565b86555061073c565b601f1984166106eb866104d5565b5f5b82811015610712578489015182556001820191506020850194506020810190506106ed565b8683101561072f578489015161072b601f89168261063e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156107c6578086048111156107a2576107a1610744565b5b60018516156107b15780820291505b80810290506107bf85610771565b9450610786565b94509492505050565b5f826107de5760019050610899565b816107eb575f9050610899565b8160018114610801576002811461080b5761083a565b6001915050610899565b60ff84111561081d5761081c610744565b5b8360020a91508482111561083457610833610744565b5b50610899565b5060208310610133831016604e8410600b841016171561086f5782820a90508381111561086a57610869610744565b5b610899565b61087c848484600161077d565b9250905081840481111561089357610892610744565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6108b6826103e3565b91506108c1836108a0565b92506108ee7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107cf565b905092915050565b5f610900826103e3565b915061090b836103e3565b9250828202610919816103e3565b915082820484148315176109305761092f610744565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61096082610937565b9050919050565b61097081610956565b82525050565b5f6020820190506109895f830184610967565b92915050565b5f610999826103e3565b91506109a4836103e3565b92508282019050808211156109bc576109bb610744565b5b92915050565b6109cb816103e3565b82525050565b5f6060820190506109e45f830186610967565b6109f160208301856109c2565b6109fe60408301846109c2565b949350505050565b5f602082019050610a195f8301846109c2565b92915050565b61106180610a2c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c8063313ce5671161006f578063313ce5671461016557806370a08231146101835780638da5cb5b146101b357806395d89b41146101d1578063a9059cbb146101ef578063dd62ed3e1461021f576100a7565b806306fdde03146100ab578063095ea7b3146100c957806312065fe0146100f957806318160ddd1461011757806323b872dd14610135575b5f5ffd5b6100b361024f565b6040516100c09190610b04565b60405180910390f35b6100e360048036038101906100de9190610bb5565b6102df565b6040516100f09190610c0d565b60405180910390f35b610101610301565b60405161010e9190610c35565b60405180910390f35b61011f610333565b60405161012c9190610c35565b60405180910390f35b61014f600480360381019061014a9190610c4e565b61033c565b60405161015c9190610c0d565b60405180910390f35b61016d61036a565b60405161017a9190610cb9565b60405180910390f35b61019d60048036038101906101989190610cd2565b610372565b6040516101aa9190610c35565b60405180910390f35b6101bb6103b7565b6040516101c89190610d0c565b60405180910390f35b6101d96103dc565b6040516101e69190610b04565b60405180910390f35b61020960048036038101906102049190610bb5565b61046c565b6040516102169190610c0d565b60405180910390f35b61023960048036038101906102349190610d25565b61048e565b6040516102469190610c35565b60405180910390f35b60606003805461025e90610d90565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610d90565b80156102d55780601f106102ac576101008083540402835291602001916102d5565b820191905f5260205f20905b8154815290600101906020018083116102b857829003601f168201915b5050505050905090565b5f5f6102e9610510565b90506102f6818585610517565b600191505092915050565b5f5f61030c33610372565b905061031661036a565b600a6103229190610f1c565b8161032d9190610f93565b91505090565b5f600254905090565b5f5f610346610510565b9050610353858285610529565b61035e8585856105bc565b60019150509392505050565b5f6012905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546103eb90610d90565b80601f016020809104026020016040519081016040528092919081815260200182805461041790610d90565b80156104625780601f1061043957610100808354040283529160200191610462565b820191905f5260205f20905b81548152906001019060200180831161044557829003601f168201915b5050505050905090565b5f5f610476610510565b90506104838185856105bc565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61052483838360016106ac565b505050565b5f610534848461048e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105b657818110156105a7578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161059e93929190610fc3565b60405180910390fd5b6105b584848484035f6106ac565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361062c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106239190610d0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361069c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106939190610d0c565b60405180910390fd5b6106a783838361087b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361071c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107139190610d0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361078c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107839190610d0c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610875578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161086c9190610c35565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108cb578060025f8282546108bf9190610ff8565b92505081905550610999565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610954578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094b93929190610fc3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e0578060025f8282540392505081905550610a2a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a879190610c35565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ad682610a94565b610ae08185610a9e565b9350610af0818560208601610aae565b610af981610abc565b840191505092915050565b5f6020820190508181035f830152610b1c8184610acc565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5182610b28565b9050919050565b610b6181610b47565b8114610b6b575f5ffd5b50565b5f81359050610b7c81610b58565b92915050565b5f819050919050565b610b9481610b82565b8114610b9e575f5ffd5b50565b5f81359050610baf81610b8b565b92915050565b5f5f60408385031215610bcb57610bca610b24565b5b5f610bd885828601610b6e565b9250506020610be985828601610ba1565b9150509250929050565b5f8115159050919050565b610c0781610bf3565b82525050565b5f602082019050610c205f830184610bfe565b92915050565b610c2f81610b82565b82525050565b5f602082019050610c485f830184610c26565b92915050565b5f5f5f60608486031215610c6557610c64610b24565b5b5f610c7286828701610b6e565b9350506020610c8386828701610b6e565b9250506040610c9486828701610ba1565b9150509250925092565b5f60ff82169050919050565b610cb381610c9e565b82525050565b5f602082019050610ccc5f830184610caa565b92915050565b5f60208284031215610ce757610ce6610b24565b5b5f610cf484828501610b6e565b91505092915050565b610d0681610b47565b82525050565b5f602082019050610d1f5f830184610cfd565b92915050565b5f5f60408385031215610d3b57610d3a610b24565b5b5f610d4885828601610b6e565b9250506020610d5985828601610b6e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610da757607f821691505b602082108103610dba57610db9610d63565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610e4257808604811115610e1e57610e1d610dc0565b5b6001851615610e2d5780820291505b8081029050610e3b85610ded565b9450610e02565b94509492505050565b5f82610e5a5760019050610f15565b81610e67575f9050610f15565b8160018114610e7d5760028114610e8757610eb6565b6001915050610f15565b60ff841115610e9957610e98610dc0565b5b8360020a915084821115610eb057610eaf610dc0565b5b50610f15565b5060208310610133831016604e8410600b8410161715610eeb5782820a905083811115610ee657610ee5610dc0565b5b610f15565b610ef88484846001610df9565b92509050818404811115610f0f57610f0e610dc0565b5b81810290505b9392505050565b5f610f2682610b82565b9150610f3183610c9e565b9250610f5e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e4b565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f9d82610b82565b9150610fa883610b82565b925082610fb857610fb7610f66565b5b828204905092915050565b5f606082019050610fd65f830186610cfd565b610fe36020830185610c26565b610ff06040830184610c26565b949350505050565b5f61100282610b82565b915061100d83610b82565b925082820190508082111561102557611024610dc0565b5b9291505056fea264697066735822122045c5d162503efa5e3714265e9f46d28b83e40b4621d7e4c5d4b2d47276d9074464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A8D CODESIZE SUB DUP1 PUSH2 0x1A8D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D7920546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x133 CALLER PUSH2 0x111 PUSH2 0x139 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST DUP4 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x141 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xA1F JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH0 DUP4 DUP4 PUSH2 0x1C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x216 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2E4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x29F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x375 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x3E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x410 DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x3DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x438 DUP5 DUP3 DUP6 ADD PUSH2 0x402 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x478 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x531 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x53B DUP7 DUP4 PUSH2 0x4F6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x576 PUSH2 0x571 PUSH2 0x56C DUP5 PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58F DUP4 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x59B DUP3 PUSH2 0x57D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x502 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5BA PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x5C5 DUP2 DUP5 DUP5 PUSH2 0x586 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5E8 JUMPI PUSH2 0x5DD PUSH0 DUP3 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5CB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x62D JUMPI PUSH2 0x5FE DUP2 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x607 DUP5 PUSH2 0x4E7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x62A PUSH2 0x622 DUP6 PUSH2 0x4E7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5CA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x64D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x632 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x665 DUP4 DUP4 PUSH2 0x63E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67E DUP3 PUSH2 0x441 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x44B JUMP JUMPDEST JUMPDEST PUSH2 0x6A1 DUP3 SLOAD PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x6AC DUP3 DUP3 DUP6 PUSH2 0x5EC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6DD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6CB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6D5 DUP6 DUP3 PUSH2 0x65A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6EB DUP7 PUSH2 0x4D5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x712 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x72F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x72B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x63E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7C6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A1 PUSH2 0x744 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x7B1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7BF DUP6 PUSH2 0x771 JUMP JUMPDEST SWAP5 POP PUSH2 0x786 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7DE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x899 JUMP JUMPDEST DUP2 PUSH2 0x7EB JUMPI PUSH0 SWAP1 POP PUSH2 0x899 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x801 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x80B JUMPI PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x899 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x81D JUMPI PUSH2 0x81C PUSH2 0x744 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x834 JUMPI PUSH2 0x833 PUSH2 0x744 JUMP JUMPDEST JUMPDEST POP PUSH2 0x899 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x86F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x744 JUMP JUMPDEST JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x77D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x744 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B6 DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C1 DUP4 PUSH2 0x8A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x8EE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x7CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x900 DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x90B DUP4 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x919 DUP2 PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x930 JUMPI PUSH2 0x92F PUSH2 0x744 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x960 DUP3 PUSH2 0x937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x970 DUP2 PUSH2 0x956 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x989 PUSH0 DUP4 ADD DUP5 PUSH2 0x967 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x999 DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A4 DUP4 PUSH2 0x3E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BB PUSH2 0x744 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9CB DUP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9E4 PUSH0 DUP4 ADD DUP7 PUSH2 0x967 JUMP JUMPDEST PUSH2 0x9F1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x9FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9C2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA19 PUSH0 DUP4 ADD DUP5 PUSH2 0x9C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1061 DUP1 PUSH2 0xA2C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21F JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2E9 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP2 DUP6 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x30C CALLER PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH2 0x316 PUSH2 0x36A JUMP JUMPDEST PUSH1 0xA PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST DUP2 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x346 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x353 DUP6 DUP3 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x35E DUP6 DUP6 DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EB SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x417 SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x462 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x439 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x462 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x445 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x476 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x483 DUP2 DUP6 DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x524 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x534 DUP5 DUP5 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x5B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5A7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6AC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x69C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A7 DUP4 DUP4 DUP4 PUSH2 0x87B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x875 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x86C SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x999 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x954 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD6 DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH2 0xAE0 DUP2 DUP6 PUSH2 0xA9E JUMP JUMPDEST SWAP4 POP PUSH2 0xAF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAAE JUMP JUMPDEST PUSH2 0xAF9 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1C DUP2 DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB51 DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xB47 JUMP JUMPDEST DUP2 EQ PUSH2 0xB6B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB7C DUP2 PUSH2 0xB58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP2 EQ PUSH2 0xB9E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBE9 DUP6 DUP3 DUP7 ADD PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH0 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC72 DUP7 DUP3 DUP8 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC83 DUP7 DUP3 DUP8 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC94 DUP7 DUP3 DUP8 ADD PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCC PUSH0 DUP4 ADD DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF4 DUP5 DUP3 DUP6 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xB47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1F PUSH0 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD48 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD59 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD63 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xE42 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xE2D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xE3B DUP6 PUSH2 0xDED JUMP JUMPDEST SWAP5 POP PUSH2 0xE02 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE5A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST DUP2 PUSH2 0xE67 JUMPI PUSH0 SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE7D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE87 JUMPI PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF15 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST POP PUSH2 0xF15 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xEEB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xF0F JUMPI PUSH2 0xF0E PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF26 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0xF31 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH2 0xF5E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF9D DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA8 DUP4 PUSH2 0xB82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xF66 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFD6 PUSH0 DUP4 ADD DUP7 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xFE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1002 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0x100D DUP4 PUSH2 0xB82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xC5 0xD1 PUSH3 0x503EFA MCOPY CALLDATACOPY EQ 0x26 MCOPY SWAP16 CHAINID 0xD2 DUP12 DUP4 0xE4 SIGNEXTEND CHAINID 0x21 0xD7 0xE4 0xC5 0xD4 0xB2 0xD4 PUSH19 0x76D9074464736F6C634300081C003300000000 ",
							"sourceMap": "145:494:6:-:0;;;247:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;342:10:6::1;336:5;;:16;;;;;;;;;;;;;;;;;;364:51;370:10;404;:8;;;:10;;:::i;:::-;398:2;:16;;;;:::i;:::-;382:13;:32;;;;:::i;:::-;364:5;;;:51;;:::i;:::-;247:178:::0;145:494;;2707:82:1;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:102;6423:8;6470:5;6467:1;6463:13;6442:34;;6381:102;;;:::o;6489:848::-;6550:5;6557:4;6581:6;6572:15;;6605:5;6596:14;;6619:712;6640:1;6630:8;6627:15;6619:712;;;6735:4;6730:3;6726:14;6720:4;6717:24;6714:50;;;6744:18;;:::i;:::-;6714:50;6794:1;6784:8;6780:16;6777:451;;;7209:4;7202:5;7198:16;7189:25;;6777:451;7259:4;7253;7249:15;7241:23;;7289:32;7312:8;7289:32;:::i;:::-;7277:44;;6619:712;;;6489:848;;;;;;;:::o;7343:1073::-;7397:5;7588:8;7578:40;;7609:1;7600:10;;7611:5;;7578:40;7637:4;7627:36;;7654:1;7645:10;;7656:5;;7627:36;7723:4;7771:1;7766:27;;;;7807:1;7802:191;;;;7716:277;;7766:27;7784:1;7775:10;;7786:5;;;7802:191;7847:3;7837:8;7834:17;7831:43;;;7854:18;;:::i;:::-;7831:43;7903:8;7900:1;7896:16;7887:25;;7938:3;7931:5;7928:14;7925:40;;;7945:18;;:::i;:::-;7925:40;7978:5;;;7716:277;;8102:2;8092:8;8089:16;8083:3;8077:4;8074:13;8070:36;8052:2;8042:8;8039:16;8034:2;8028:4;8025:12;8021:35;8005:111;8002:246;;;8158:8;8152:4;8148:19;8139:28;;8193:3;8186:5;8183:14;8180:40;;;8200:18;;:::i;:::-;8180:40;8233:5;;8002:246;8273:42;8311:3;8301:8;8295:4;8292:1;8273:42;:::i;:::-;8258:57;;;;8347:4;8342:3;8338:14;8331:5;8328:25;8325:51;;;8356:18;;:::i;:::-;8325:51;8405:4;8398:5;8394:16;8385:25;;7343:1073;;;;;;:::o;8422:86::-;8457:7;8497:4;8490:5;8486:16;8475:27;;8422:86;;;:::o;8514:281::-;8572:5;8596:23;8614:4;8596:23;:::i;:::-;8588:31;;8640:25;8656:8;8640:25;:::i;:::-;8628:37;;8684:104;8721:66;8711:8;8705:4;8684:104;:::i;:::-;8675:113;;8514:281;;;;:::o;8801:410::-;8841:7;8864:20;8882:1;8864:20;:::i;:::-;8859:25;;8898:20;8916:1;8898:20;:::i;:::-;8893:25;;8953:1;8950;8946:9;8975:30;8993:11;8975:30;:::i;:::-;8964:41;;9154:1;9145:7;9141:15;9138:1;9135:22;9115:1;9108:9;9088:83;9065:139;;9184:18;;:::i;:::-;9065:139;8849:362;8801:410;;;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;145:494:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1303,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1708,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1296,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1321,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1468,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2171,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1166,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 735,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 882,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 874,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1154": {
									"entryPoint": 769,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 591,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1108": {
									"entryPoint": 951,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 988,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 819,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 828,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1132,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4035,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9958:7",
										"nodeType": "YulBlock",
										"src": "0:9958:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6453:152:7",
													"nodeType": "YulBlock",
													"src": "6453:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:7"
																},
																"nativeSrc": "6463:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:7"
															},
															"nativeSrc": "6463:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:7"
																},
																"nativeSrc": "6560:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:7"
															},
															"nativeSrc": "6560:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:7"
																},
																"nativeSrc": "6584:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:7"
															},
															"nativeSrc": "6584:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:7"
											},
											{
												"body": {
													"nativeSrc": "6662:51:7",
													"nodeType": "YulBlock",
													"src": "6662:51:7",
													"statements": [
														{
															"nativeSrc": "6672:34:7",
															"nodeType": "YulAssignment",
															"src": "6672:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6697:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6697:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6700:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6700:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6693:3:7"
																},
																"nativeSrc": "6693:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6693:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6672:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6672:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6611:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6643:5:7",
														"nodeType": "YulTypedName",
														"src": "6643:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6653:8:7",
														"nodeType": "YulTypedName",
														"src": "6653:8:7",
														"type": ""
													}
												],
												"src": "6611:102:7"
											},
											{
												"body": {
													"nativeSrc": "6792:775:7",
													"nodeType": "YulBlock",
													"src": "6792:775:7",
													"statements": [
														{
															"nativeSrc": "6802:15:7",
															"nodeType": "YulAssignment",
															"src": "6802:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "6811:6:7",
																"nodeType": "YulIdentifier",
																"src": "6811:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6802:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:7"
																}
															]
														},
														{
															"nativeSrc": "6826:14:7",
															"nodeType": "YulAssignment",
															"src": "6826:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "6835:5:7",
																"nodeType": "YulIdentifier",
																"src": "6835:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6826:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6884:677:7",
																"nodeType": "YulBlock",
																"src": "6884:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6972:22:7",
																			"nodeType": "YulBlock",
																			"src": "6972:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6974:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "6974:16:7"
																						},
																						"nativeSrc": "6974:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6974:18:7"
																					},
																					"nativeSrc": "6974:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "6974:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6950:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6950:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6960:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6960:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6965:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6965:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6956:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6956:3:7"
																					},
																					"nativeSrc": "6956:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6956:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6947:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6947:2:7"
																			},
																			"nativeSrc": "6947:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6947:24:7"
																		},
																		"nativeSrc": "6944:50:7",
																		"nodeType": "YulIf",
																		"src": "6944:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "7039:419:7",
																			"nodeType": "YulBlock",
																			"src": "7039:419:7",
																			"statements": [
																				{
																					"nativeSrc": "7419:25:7",
																					"nodeType": "YulAssignment",
																					"src": "7419:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7432:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "7432:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7439:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "7439:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7428:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7428:3:7"
																						},
																						"nativeSrc": "7428:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7428:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7419:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7419:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7014:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7014:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7024:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7024:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7010:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7010:3:7"
																			},
																			"nativeSrc": "7010:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7010:16:7"
																		},
																		"nativeSrc": "7007:451:7",
																		"nodeType": "YulIf",
																		"src": "7007:451:7"
																	},
																	{
																		"nativeSrc": "7471:23:7",
																		"nodeType": "YulAssignment",
																		"src": "7471:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7483:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7483:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7489:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7489:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7479:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7479:3:7"
																			},
																			"nativeSrc": "7479:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7471:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7471:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7507:44:7",
																		"nodeType": "YulAssignment",
																		"src": "7507:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7542:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7542:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7519:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "7519:22:7"
																			},
																			"nativeSrc": "7519:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7519:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7507:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "7507:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6860:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6860:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6870:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6857:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6857:2:7"
																},
																"nativeSrc": "6857:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6857:15:7"
															},
															"nativeSrc": "6849:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6873:2:7",
																"nodeType": "YulBlock",
																"src": "6873:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6853:3:7",
																"nodeType": "YulBlock",
																"src": "6853:3:7",
																"statements": []
															},
															"src": "6849:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6719:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6747:6:7",
														"nodeType": "YulTypedName",
														"src": "6747:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6755:5:7",
														"nodeType": "YulTypedName",
														"src": "6755:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6762:8:7",
														"nodeType": "YulTypedName",
														"src": "6762:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6772:3:7",
														"nodeType": "YulTypedName",
														"src": "6772:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6780:5:7",
														"nodeType": "YulTypedName",
														"src": "6780:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6787:4:7",
														"nodeType": "YulTypedName",
														"src": "6787:4:7",
														"type": ""
													}
												],
												"src": "6719:848:7"
											},
											{
												"body": {
													"nativeSrc": "7633:1013:7",
													"nodeType": "YulBlock",
													"src": "7633:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7828:20:7",
																"nodeType": "YulBlock",
																"src": "7828:20:7",
																"statements": [
																	{
																		"nativeSrc": "7830:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7830:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7839:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7839:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7830:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7841:5:7",
																		"nodeType": "YulLeave",
																		"src": "7841:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7818:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7818:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7811:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:7"
																},
																"nativeSrc": "7811:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7811:16:7"
															},
															"nativeSrc": "7808:40:7",
															"nodeType": "YulIf",
															"src": "7808:40:7"
														},
														{
															"body": {
																"nativeSrc": "7873:20:7",
																"nodeType": "YulBlock",
																"src": "7873:20:7",
																"statements": [
																	{
																		"nativeSrc": "7875:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7875:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7884:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7884:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7875:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7875:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7886:5:7",
																		"nodeType": "YulLeave",
																		"src": "7886:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7867:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7867:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7860:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:7"
																},
																"nativeSrc": "7860:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7860:12:7"
															},
															"nativeSrc": "7857:36:7",
															"nodeType": "YulIf",
															"src": "7857:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8003:20:7",
																		"nodeType": "YulBlock",
																		"src": "8003:20:7",
																		"statements": [
																			{
																				"nativeSrc": "8005:10:7",
																				"nodeType": "YulAssignment",
																				"src": "8005:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8014:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8005:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8005:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8016:5:7",
																				"nodeType": "YulLeave",
																				"src": "8016:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7996:27:7",
																	"nodeType": "YulCase",
																	"src": "7996:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8001:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8047:176:7",
																		"nodeType": "YulBlock",
																		"src": "8047:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8082:22:7",
																					"nodeType": "YulBlock",
																					"src": "8082:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8084:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8084:16:7"
																								},
																								"nativeSrc": "8084:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8084:18:7"
																							},
																							"nativeSrc": "8084:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8084:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8067:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8067:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8077:3:7",
																							"nodeType": "YulLiteral",
																							"src": "8077:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8064:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8064:2:7"
																					},
																					"nativeSrc": "8064:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8064:17:7"
																				},
																				"nativeSrc": "8061:43:7",
																				"nodeType": "YulIf",
																				"src": "8061:43:7"
																			},
																			{
																				"nativeSrc": "8117:25:7",
																				"nodeType": "YulAssignment",
																				"src": "8117:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8130:1:7",
																							"nodeType": "YulLiteral",
																							"src": "8130:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8133:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8133:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8126:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8126:3:7"
																					},
																					"nativeSrc": "8126:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8126:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8117:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8117:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8173:22:7",
																					"nodeType": "YulBlock",
																					"src": "8173:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8175:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8175:16:7"
																								},
																								"nativeSrc": "8175:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8175:18:7"
																							},
																							"nativeSrc": "8175:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8175:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8161:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8161:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8168:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8168:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8158:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8158:2:7"
																					},
																					"nativeSrc": "8158:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8158:14:7"
																				},
																				"nativeSrc": "8155:40:7",
																				"nodeType": "YulIf",
																				"src": "8155:40:7"
																			},
																			{
																				"nativeSrc": "8208:5:7",
																				"nodeType": "YulLeave",
																				"src": "8208:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8032:191:7",
																	"nodeType": "YulCase",
																	"src": "8032:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8037:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8037:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7953:4:7",
																"nodeType": "YulIdentifier",
																"src": "7953:4:7"
															},
															"nativeSrc": "7946:277:7",
															"nodeType": "YulSwitch",
															"src": "7946:277:7"
														},
														{
															"body": {
																"nativeSrc": "8355:123:7",
																"nodeType": "YulBlock",
																"src": "8355:123:7",
																"statements": [
																	{
																		"nativeSrc": "8369:28:7",
																		"nodeType": "YulAssignment",
																		"src": "8369:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8382:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8382:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8388:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8388:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8378:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8378:3:7"
																			},
																			"nativeSrc": "8378:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8378:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8369:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8369:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8428:22:7",
																			"nodeType": "YulBlock",
																			"src": "8428:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8430:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8430:16:7"
																						},
																						"nativeSrc": "8430:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8430:18:7"
																					},
																					"nativeSrc": "8430:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8430:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8416:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8416:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8423:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8423:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8413:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8413:2:7"
																			},
																			"nativeSrc": "8413:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8413:14:7"
																		},
																		"nativeSrc": "8410:40:7",
																		"nodeType": "YulIf",
																		"src": "8410:40:7"
																	},
																	{
																		"nativeSrc": "8463:5:7",
																		"nodeType": "YulLeave",
																		"src": "8463:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8258:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8258:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8264:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8264:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8255:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8255:2:7"
																				},
																				"nativeSrc": "8255:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8255:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8272:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8272:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8282:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8282:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8269:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8269:2:7"
																				},
																				"nativeSrc": "8269:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8269:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8251:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8251:3:7"
																		},
																		"nativeSrc": "8251:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8251:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8307:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8307:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8313:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8313:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8304:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8304:2:7"
																				},
																				"nativeSrc": "8304:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8304:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8322:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8322:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8332:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8332:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8319:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8319:2:7"
																				},
																				"nativeSrc": "8319:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8319:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:7"
																		},
																		"nativeSrc": "8300:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8300:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8235:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8235:2:7"
																},
																"nativeSrc": "8235:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8235:111:7"
															},
															"nativeSrc": "8232:246:7",
															"nodeType": "YulIf",
															"src": "8232:246:7"
														},
														{
															"nativeSrc": "8488:57:7",
															"nodeType": "YulAssignment",
															"src": "8488:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8522:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8522:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8525:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8531:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8531:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8541:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8541:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8503:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8503:18:7"
																},
																"nativeSrc": "8503:42:7",
																"nodeType": "YulFunctionCall",
																"src": "8503:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8488:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8488:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "8495:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8495:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8584:22:7",
																"nodeType": "YulBlock",
																"src": "8584:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8586:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8586:16:7"
																			},
																			"nativeSrc": "8586:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8586:18:7"
																		},
																		"nativeSrc": "8586:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8586:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8561:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8561:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8572:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8577:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8577:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:7"
																		},
																		"nativeSrc": "8568:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8568:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8558:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8558:2:7"
																},
																"nativeSrc": "8558:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8558:25:7"
															},
															"nativeSrc": "8555:51:7",
															"nodeType": "YulIf",
															"src": "8555:51:7"
														},
														{
															"nativeSrc": "8615:25:7",
															"nodeType": "YulAssignment",
															"src": "8615:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8628:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8628:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8635:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8635:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8624:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:7"
																},
																"nativeSrc": "8624:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8624:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8615:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7573:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7603:4:7",
														"nodeType": "YulTypedName",
														"src": "7603:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7609:8:7",
														"nodeType": "YulTypedName",
														"src": "7609:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7619:3:7",
														"nodeType": "YulTypedName",
														"src": "7619:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7627:5:7",
														"nodeType": "YulTypedName",
														"src": "7627:5:7",
														"type": ""
													}
												],
												"src": "7573:1073:7"
											},
											{
												"body": {
													"nativeSrc": "8716:217:7",
													"nodeType": "YulBlock",
													"src": "8716:217:7",
													"statements": [
														{
															"nativeSrc": "8726:31:7",
															"nodeType": "YulAssignment",
															"src": "8726:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8752:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8752:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8734:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8734:17:7"
																},
																"nativeSrc": "8734:23:7",
																"nodeType": "YulFunctionCall",
																"src": "8734:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8726:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8726:4:7"
																}
															]
														},
														{
															"nativeSrc": "8766:37:7",
															"nodeType": "YulAssignment",
															"src": "8766:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8794:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8794:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8778:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8778:15:7"
																},
																"nativeSrc": "8778:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8778:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8766:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8766:8:7"
																}
															]
														},
														{
															"nativeSrc": "8813:113:7",
															"nodeType": "YulAssignment",
															"src": "8813:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8843:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8843:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8849:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8849:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8859:66:7",
																		"nodeType": "YulLiteral",
																		"src": "8859:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8822:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "8822:20:7"
																},
																"nativeSrc": "8822:104:7",
																"nodeType": "YulFunctionCall",
																"src": "8822:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8813:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8813:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8652:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8691:4:7",
														"nodeType": "YulTypedName",
														"src": "8691:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8697:8:7",
														"nodeType": "YulTypedName",
														"src": "8697:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8710:5:7",
														"nodeType": "YulTypedName",
														"src": "8710:5:7",
														"type": ""
													}
												],
												"src": "8652:281:7"
											},
											{
												"body": {
													"nativeSrc": "8967:152:7",
													"nodeType": "YulBlock",
													"src": "8967:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8984:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8984:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8987:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8987:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8977:6:7"
																},
																"nativeSrc": "8977:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8977:88:7"
															},
															"nativeSrc": "8977:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8977:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9081:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9081:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9084:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9084:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:7"
																},
																"nativeSrc": "9074:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9074:15:7"
															},
															"nativeSrc": "9074:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9074:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9105:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9105:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9108:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9108:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9098:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:7"
																},
																"nativeSrc": "9098:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9098:15:7"
															},
															"nativeSrc": "9098:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9098:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8939:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8939:180:7"
											},
											{
												"body": {
													"nativeSrc": "9167:143:7",
													"nodeType": "YulBlock",
													"src": "9167:143:7",
													"statements": [
														{
															"nativeSrc": "9177:25:7",
															"nodeType": "YulAssignment",
															"src": "9177:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9200:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9200:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:7"
																},
																"nativeSrc": "9182:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9182:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9177:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9177:1:7"
																}
															]
														},
														{
															"nativeSrc": "9211:25:7",
															"nodeType": "YulAssignment",
															"src": "9211:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9234:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9234:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9216:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9216:17:7"
																},
																"nativeSrc": "9216:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9216:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9211:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9211:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9258:22:7",
																"nodeType": "YulBlock",
																"src": "9258:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9260:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9260:16:7"
																			},
																			"nativeSrc": "9260:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9260:18:7"
																		},
																		"nativeSrc": "9260:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9255:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9255:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:7"
																},
																"nativeSrc": "9248:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9248:9:7"
															},
															"nativeSrc": "9245:35:7",
															"nodeType": "YulIf",
															"src": "9245:35:7"
														},
														{
															"nativeSrc": "9290:14:7",
															"nodeType": "YulAssignment",
															"src": "9290:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9299:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9302:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9302:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9295:3:7"
																},
																"nativeSrc": "9295:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9295:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9290:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9290:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9125:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9156:1:7",
														"nodeType": "YulTypedName",
														"src": "9156:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9159:1:7",
														"nodeType": "YulTypedName",
														"src": "9159:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9165:1:7",
														"nodeType": "YulTypedName",
														"src": "9165:1:7",
														"type": ""
													}
												],
												"src": "9125:185:7"
											},
											{
												"body": {
													"nativeSrc": "9470:288:7",
													"nodeType": "YulBlock",
													"src": "9470:288:7",
													"statements": [
														{
															"nativeSrc": "9480:26:7",
															"nodeType": "YulAssignment",
															"src": "9480:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9492:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:7"
																},
																"nativeSrc": "9488:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9488:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9480:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9560:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9560:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9573:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9584:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9584:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9569:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:7"
																		},
																		"nativeSrc": "9569:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9569:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9516:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9516:43:7"
																},
																"nativeSrc": "9516:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9516:71:7"
															},
															"nativeSrc": "9516:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9516:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9641:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9641:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9654:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9665:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9665:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9650:3:7"
																		},
																		"nativeSrc": "9650:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9650:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9597:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9597:43:7"
																},
																"nativeSrc": "9597:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9597:72:7"
															},
															"nativeSrc": "9597:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9597:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9723:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9736:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9736:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9747:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9747:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9732:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9732:3:7"
																		},
																		"nativeSrc": "9732:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9732:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9679:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9679:43:7"
																},
																"nativeSrc": "9679:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9679:72:7"
															},
															"nativeSrc": "9679:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9679:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9316:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9426:9:7",
														"nodeType": "YulTypedName",
														"src": "9426:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9438:6:7",
														"nodeType": "YulTypedName",
														"src": "9438:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9446:6:7",
														"nodeType": "YulTypedName",
														"src": "9446:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9454:6:7",
														"nodeType": "YulTypedName",
														"src": "9454:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9465:4:7",
														"nodeType": "YulTypedName",
														"src": "9465:4:7",
														"type": ""
													}
												],
												"src": "9316:442:7"
											},
											{
												"body": {
													"nativeSrc": "9808:147:7",
													"nodeType": "YulBlock",
													"src": "9808:147:7",
													"statements": [
														{
															"nativeSrc": "9818:25:7",
															"nodeType": "YulAssignment",
															"src": "9818:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9841:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9841:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9823:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9823:17:7"
																},
																"nativeSrc": "9823:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9823:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9818:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9818:1:7"
																}
															]
														},
														{
															"nativeSrc": "9852:25:7",
															"nodeType": "YulAssignment",
															"src": "9852:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9875:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9875:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9857:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9857:17:7"
																},
																"nativeSrc": "9857:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9857:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9852:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9852:1:7"
																}
															]
														},
														{
															"nativeSrc": "9886:16:7",
															"nodeType": "YulAssignment",
															"src": "9886:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9897:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9897:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9900:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9900:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9893:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:3:7"
																},
																"nativeSrc": "9893:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9893:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9886:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9926:22:7",
																"nodeType": "YulBlock",
																"src": "9926:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9928:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9928:16:7"
																			},
																			"nativeSrc": "9928:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9928:18:7"
																		},
																		"nativeSrc": "9928:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9928:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9918:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9918:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9921:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9921:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9915:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9915:2:7"
																},
																"nativeSrc": "9915:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9915:10:7"
															},
															"nativeSrc": "9912:36:7",
															"nodeType": "YulIf",
															"src": "9912:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9764:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9795:1:7",
														"nodeType": "YulTypedName",
														"src": "9795:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9798:1:7",
														"nodeType": "YulTypedName",
														"src": "9798:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9804:3:7",
														"nodeType": "YulTypedName",
														"src": "9804:3:7",
														"type": ""
													}
												],
												"src": "9764:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c8063313ce5671161006f578063313ce5671461016557806370a08231146101835780638da5cb5b146101b357806395d89b41146101d1578063a9059cbb146101ef578063dd62ed3e1461021f576100a7565b806306fdde03146100ab578063095ea7b3146100c957806312065fe0146100f957806318160ddd1461011757806323b872dd14610135575b5f5ffd5b6100b361024f565b6040516100c09190610b04565b60405180910390f35b6100e360048036038101906100de9190610bb5565b6102df565b6040516100f09190610c0d565b60405180910390f35b610101610301565b60405161010e9190610c35565b60405180910390f35b61011f610333565b60405161012c9190610c35565b60405180910390f35b61014f600480360381019061014a9190610c4e565b61033c565b60405161015c9190610c0d565b60405180910390f35b61016d61036a565b60405161017a9190610cb9565b60405180910390f35b61019d60048036038101906101989190610cd2565b610372565b6040516101aa9190610c35565b60405180910390f35b6101bb6103b7565b6040516101c89190610d0c565b60405180910390f35b6101d96103dc565b6040516101e69190610b04565b60405180910390f35b61020960048036038101906102049190610bb5565b61046c565b6040516102169190610c0d565b60405180910390f35b61023960048036038101906102349190610d25565b61048e565b6040516102469190610c35565b60405180910390f35b60606003805461025e90610d90565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610d90565b80156102d55780601f106102ac576101008083540402835291602001916102d5565b820191905f5260205f20905b8154815290600101906020018083116102b857829003601f168201915b5050505050905090565b5f5f6102e9610510565b90506102f6818585610517565b600191505092915050565b5f5f61030c33610372565b905061031661036a565b600a6103229190610f1c565b8161032d9190610f93565b91505090565b5f600254905090565b5f5f610346610510565b9050610353858285610529565b61035e8585856105bc565b60019150509392505050565b5f6012905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546103eb90610d90565b80601f016020809104026020016040519081016040528092919081815260200182805461041790610d90565b80156104625780601f1061043957610100808354040283529160200191610462565b820191905f5260205f20905b81548152906001019060200180831161044557829003601f168201915b5050505050905090565b5f5f610476610510565b90506104838185856105bc565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61052483838360016106ac565b505050565b5f610534848461048e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105b657818110156105a7578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161059e93929190610fc3565b60405180910390fd5b6105b584848484035f6106ac565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361062c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106239190610d0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361069c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106939190610d0c565b60405180910390fd5b6106a783838361087b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361071c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107139190610d0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361078c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107839190610d0c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610875578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161086c9190610c35565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108cb578060025f8282546108bf9190610ff8565b92505081905550610999565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610954578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094b93929190610fc3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e0578060025f8282540392505081905550610a2a565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a879190610c35565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ad682610a94565b610ae08185610a9e565b9350610af0818560208601610aae565b610af981610abc565b840191505092915050565b5f6020820190508181035f830152610b1c8184610acc565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5182610b28565b9050919050565b610b6181610b47565b8114610b6b575f5ffd5b50565b5f81359050610b7c81610b58565b92915050565b5f819050919050565b610b9481610b82565b8114610b9e575f5ffd5b50565b5f81359050610baf81610b8b565b92915050565b5f5f60408385031215610bcb57610bca610b24565b5b5f610bd885828601610b6e565b9250506020610be985828601610ba1565b9150509250929050565b5f8115159050919050565b610c0781610bf3565b82525050565b5f602082019050610c205f830184610bfe565b92915050565b610c2f81610b82565b82525050565b5f602082019050610c485f830184610c26565b92915050565b5f5f5f60608486031215610c6557610c64610b24565b5b5f610c7286828701610b6e565b9350506020610c8386828701610b6e565b9250506040610c9486828701610ba1565b9150509250925092565b5f60ff82169050919050565b610cb381610c9e565b82525050565b5f602082019050610ccc5f830184610caa565b92915050565b5f60208284031215610ce757610ce6610b24565b5b5f610cf484828501610b6e565b91505092915050565b610d0681610b47565b82525050565b5f602082019050610d1f5f830184610cfd565b92915050565b5f5f60408385031215610d3b57610d3a610b24565b5b5f610d4885828601610b6e565b9250506020610d5985828601610b6e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610da757607f821691505b602082108103610dba57610db9610d63565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610e4257808604811115610e1e57610e1d610dc0565b5b6001851615610e2d5780820291505b8081029050610e3b85610ded565b9450610e02565b94509492505050565b5f82610e5a5760019050610f15565b81610e67575f9050610f15565b8160018114610e7d5760028114610e8757610eb6565b6001915050610f15565b60ff841115610e9957610e98610dc0565b5b8360020a915084821115610eb057610eaf610dc0565b5b50610f15565b5060208310610133831016604e8410600b8410161715610eeb5782820a905083811115610ee657610ee5610dc0565b5b610f15565b610ef88484846001610df9565b92509050818404811115610f0f57610f0e610dc0565b5b81810290505b9392505050565b5f610f2682610b82565b9150610f3183610c9e565b9250610f5e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e4b565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f9d82610b82565b9150610fa883610b82565b925082610fb857610fb7610f66565b5b828204905092915050565b5f606082019050610fd65f830186610cfd565b610fe36020830185610c26565b610ff06040830184610c26565b949350505050565b5f61100282610b82565b915061100d83610b82565b925082820190508082111561102557611024610dc0565b5b9291505056fea264697066735822122045c5d162503efa5e3714265e9f46d28b83e40b4621d7e4c5d4b2d47276d9074464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21F JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25E SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28A SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2E9 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP2 DUP6 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x30C CALLER PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH2 0x316 PUSH2 0x36A JUMP JUMPDEST PUSH1 0xA PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xF1C JUMP JUMPDEST DUP2 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x346 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x353 DUP6 DUP3 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x35E DUP6 DUP6 DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EB SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x417 SWAP1 PUSH2 0xD90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x462 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x439 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x462 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x445 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x476 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH2 0x483 DUP2 DUP6 DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x524 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x534 DUP5 DUP5 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x5B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5A7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6AC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x69C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A7 DUP4 DUP4 DUP4 PUSH2 0x87B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x875 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x86C SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x999 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x954 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2A JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD6 DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH2 0xAE0 DUP2 DUP6 PUSH2 0xA9E JUMP JUMPDEST SWAP4 POP PUSH2 0xAF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAAE JUMP JUMPDEST PUSH2 0xAF9 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1C DUP2 DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB51 DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB61 DUP2 PUSH2 0xB47 JUMP JUMPDEST DUP2 EQ PUSH2 0xB6B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB7C DUP2 PUSH2 0xB58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP2 EQ PUSH2 0xB9E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0xB8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCA PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBE9 DUP6 DUP3 DUP7 ADD PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC20 PUSH0 DUP4 ADD DUP5 PUSH2 0xBFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xB82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH0 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC72 DUP7 DUP3 DUP8 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC83 DUP7 DUP3 DUP8 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC94 DUP7 DUP3 DUP8 ADD PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCC PUSH0 DUP4 ADD DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF4 DUP5 DUP3 DUP6 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xB47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1F PUSH0 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH2 0xD3A PUSH2 0xB24 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD48 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD59 DUP6 DUP3 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0xD63 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xE42 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xE2D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xE3B DUP6 PUSH2 0xDED JUMP JUMPDEST SWAP5 POP PUSH2 0xE02 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE5A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST DUP2 PUSH2 0xE67 JUMPI PUSH0 SWAP1 POP PUSH2 0xF15 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE7D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE87 JUMPI PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF15 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST POP PUSH2 0xF15 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xEEB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xF0F JUMPI PUSH2 0xF0E PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF26 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0xF31 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH2 0xF5E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF9D DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA8 DUP4 PUSH2 0xB82 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH2 0xF66 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFD6 PUSH0 DUP4 ADD DUP7 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xFE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1002 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP2 POP PUSH2 0x100D DUP4 PUSH2 0xB82 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0xDC0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xC5 0xD1 PUSH3 0x503EFA MCOPY CALLDATACOPY EQ 0x26 MCOPY SWAP16 CHAINID 0xD2 DUP12 DUP4 0xE4 SIGNEXTEND CHAINID 0x21 0xD7 0xE4 0xC5 0xD4 0xB2 0xD4 PUSH19 0x76D9074464736F6C634300081C003300000000 ",
							"sourceMap": "145:494:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:203:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:20:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;433:203:6:-;476:7;513:18;534:21;544:10;534:9;:21::i;:::-;513:42;;592:10;:8;:10::i;:::-;586:2;:16;;;;:::i;:::-;573:10;:29;;;;:::i;:::-;566:36;;;433:203;:::o;2849:97:1:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;218:20:6:-;;;;;;;;;;;;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:102;6653:8;6700:5;6697:1;6693:13;6672:34;;6611:102;;;:::o;6719:848::-;6780:5;6787:4;6811:6;6802:15;;6835:5;6826:14;;6849:712;6870:1;6860:8;6857:15;6849:712;;;6965:4;6960:3;6956:14;6950:4;6947:24;6944:50;;;6974:18;;:::i;:::-;6944:50;7024:1;7014:8;7010:16;7007:451;;;7439:4;7432:5;7428:16;7419:25;;7007:451;7489:4;7483;7479:15;7471:23;;7519:32;7542:8;7519:32;:::i;:::-;7507:44;;6849:712;;;6719:848;;;;;;;:::o;7573:1073::-;7627:5;7818:8;7808:40;;7839:1;7830:10;;7841:5;;7808:40;7867:4;7857:36;;7884:1;7875:10;;7886:5;;7857:36;7953:4;8001:1;7996:27;;;;8037:1;8032:191;;;;7946:277;;7996:27;8014:1;8005:10;;8016:5;;;8032:191;8077:3;8067:8;8064:17;8061:43;;;8084:18;;:::i;:::-;8061:43;8133:8;8130:1;8126:16;8117:25;;8168:3;8161:5;8158:14;8155:40;;;8175:18;;:::i;:::-;8155:40;8208:5;;;7946:277;;8332:2;8322:8;8319:16;8313:3;8307:4;8304:13;8300:36;8282:2;8272:8;8269:16;8264:2;8258:4;8255:12;8251:35;8235:111;8232:246;;;8388:8;8382:4;8378:19;8369:28;;8423:3;8416:5;8413:14;8410:40;;;8430:18;;:::i;:::-;8410:40;8463:5;;8232:246;8503:42;8541:3;8531:8;8525:4;8522:1;8503:42;:::i;:::-;8488:57;;;;8577:4;8572:3;8568:14;8561:5;8558:25;8555:51;;;8586:18;;:::i;:::-;8555:51;8635:4;8628:5;8624:16;8615:25;;7573:1073;;;;;;:::o;8652:281::-;8710:5;8734:23;8752:4;8734:23;:::i;:::-;8726:31;;8778:25;8794:8;8778:25;:::i;:::-;8766:37;;8822:104;8859:66;8849:8;8843:4;8822:104;:::i;:::-;8813:113;;8652:281;;;;:::o;8939:180::-;8987:77;8984:1;8977:88;9084:4;9081:1;9074:15;9108:4;9105:1;9098:15;9125:185;9165:1;9182:20;9200:1;9182:20;:::i;:::-;9177:25;;9216:20;9234:1;9216:20;:::i;:::-;9211:25;;9255:1;9245:35;;9260:18;;:::i;:::-;9245:35;9302:1;9299;9295:9;9290:14;;9125:185;;;;:::o;9316:442::-;9465:4;9503:2;9492:9;9488:18;9480:26;;9516:71;9584:1;9573:9;9569:17;9560:6;9516:71;:::i;:::-;9597:72;9665:2;9654:9;9650:18;9641:6;9597:72;:::i;:::-;9679;9747:2;9736:9;9732:18;9723:6;9679:72;:::i;:::-;9316:442;;;;;;:::o;9764:191::-;9804:3;9823:20;9841:1;9823:20;:::i;:::-;9818:25;;9857:20;9875:1;9857:20;:::i;:::-;9852:25;;9900:1;9897;9893:9;9886:16;;9921:3;9918:1;9915:10;9912:36;;;9928:18;;:::i;:::-;9912:36;9764:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "838600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2850",
								"decimals()": "338",
								"getBalance()": "infinite",
								"name()": "infinite",
								"owner()": "2552",
								"symbol()": "infinite",
								"totalSupply()": "2499",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 247,
									"end": 425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 247,
									"end": 425,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4D7920546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4D544B4E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 342,
									"end": 352,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 336,
									"end": 341,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 336,
									"end": 341,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 336,
									"end": 352,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 364,
									"end": 415,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 370,
									"end": 380,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 404,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 404,
									"end": 412,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 404,
									"end": 412,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 404,
									"end": 412,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 404,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 404,
									"end": 414,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 404,
									"end": 414,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 404,
									"end": 414,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 404,
									"end": 414,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 398,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 398,
									"end": 414,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 398,
									"end": 414,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 382,
									"end": 395,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 382,
									"end": 414,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 382,
									"end": 414,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 364,
									"end": 369,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 364,
									"end": 369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 364,
									"end": 369,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 364,
									"end": 415,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 364,
									"end": 415,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 364,
									"end": 415,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 364,
									"end": 415,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 364,
									"end": 415,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 247,
									"end": 425,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6243,
									"end": 6320,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6240,
									"end": 6241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6321,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6340,
									"end": 6344,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 6337,
									"end": 6338,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6330,
									"end": 6345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6364,
									"end": 6368,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6361,
									"end": 6362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6369,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6423,
									"end": 6431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6470,
									"end": 6475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 6476,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6381,
									"end": 6483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6550,
									"end": 6555,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6587,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6605,
									"end": 6610,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6640,
									"end": 6641,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6630,
									"end": 6638,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6627,
									"end": 6642,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6735,
									"end": 6739,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6726,
									"end": 6740,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 6720,
									"end": 6724,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6717,
									"end": 6741,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6744,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6794,
									"end": 6795,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6784,
									"end": 6792,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6780,
									"end": 6796,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7209,
									"end": 7213,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7207,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7259,
									"end": 7263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7253,
									"end": 7257,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7249,
									"end": 7264,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7312,
									"end": 7320,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7289,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7397,
									"end": 7402,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7588,
									"end": 7596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7637,
									"end": 7641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 7655,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7723,
									"end": 7727,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7807,
									"end": 7808,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7784,
									"end": 7785,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7847,
									"end": 7850,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 7837,
									"end": 7845,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7834,
									"end": 7851,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 7854,
									"end": 7872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7911,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7896,
									"end": 7912,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 7941,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7931,
									"end": 7936,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7928,
									"end": 7942,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 7945,
									"end": 7963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8102,
									"end": 8104,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8100,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8089,
									"end": 8105,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8083,
									"end": 8086,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 8077,
									"end": 8081,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8074,
									"end": 8087,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8070,
									"end": 8106,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8052,
									"end": 8054,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 8042,
									"end": 8050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8039,
									"end": 8055,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8036,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 8028,
									"end": 8032,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8025,
									"end": 8037,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 8056,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8005,
									"end": 8116,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8158,
									"end": 8166,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8148,
									"end": 8167,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8186,
									"end": 8191,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8183,
									"end": 8197,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 8200,
									"end": 8218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8309,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8295,
									"end": 8299,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8292,
									"end": 8293,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 8273,
									"end": 8315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8347,
									"end": 8351,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8342,
									"end": 8345,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8338,
									"end": 8352,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8331,
									"end": 8336,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8328,
									"end": 8353,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 8356,
									"end": 8374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8394,
									"end": 8410,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 8416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8457,
									"end": 8464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8497,
									"end": 8501,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8490,
									"end": 8495,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8486,
									"end": 8502,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8422,
									"end": 8508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8596,
									"end": 8619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8656,
									"end": 8664,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8640,
									"end": 8665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8721,
									"end": 8787,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8711,
									"end": 8719,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8705,
									"end": 8709,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8684,
									"end": 8788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8514,
									"end": 8795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 8848,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8864,
									"end": 8884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8898,
									"end": 8918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8950,
									"end": 8951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8946,
									"end": 8955,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8993,
									"end": 9004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8975,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9154,
									"end": 9155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9145,
									"end": 9152,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9141,
									"end": 9156,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9138,
									"end": 9139,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9135,
									"end": 9157,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9115,
									"end": 9116,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9108,
									"end": 9117,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9088,
									"end": 9171,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9184,
									"end": 9202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8849,
									"end": 9211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 145,
									"end": 639,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 145,
									"end": 639,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 639,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045c5d162503efa5e3714265e9f46d28b83e40b4621d7e4c5d4b2d47276d9074464736f6c634300081c0033",
									".code": [
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "12065FE0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 433,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 433,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 218,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 218,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 544,
											"end": 554,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 534,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 534,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 534,
											"end": 555,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 534,
											"end": 555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 513,
											"end": 555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 592,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 592,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 602,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 592,
											"end": 602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 586,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 586,
											"end": 602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 586,
											"end": 602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 586,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 586,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 602,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 586,
											"end": 602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 573,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 573,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 573,
											"end": 602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 573,
											"end": 602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 573,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 573,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 573,
											"end": 602,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 573,
											"end": 602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 566,
											"end": 602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 566,
											"end": 602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 218,
											"end": 238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6693,
											"end": 6706,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6860,
											"end": 6868,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6872,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6970,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6974,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7014,
											"end": 7022,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7026,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7494,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7542,
											"end": 7550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7519,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 7567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8067,
											"end": 8075,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8084,
											"end": 8102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8133,
											"end": 8141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8126,
											"end": 8142,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8171,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8158,
											"end": 8172,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8175,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8335,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 8307,
											"end": 8311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 8272,
											"end": 8280,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8255,
											"end": 8267,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8286,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8346,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8397,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8413,
											"end": 8427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8430,
											"end": 8448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8531,
											"end": 8539,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8503,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8582,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8558,
											"end": 8583,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8586,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 8646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8734,
											"end": 8757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8794,
											"end": 8802,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8778,
											"end": 8803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8857,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8822,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 9119,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8939,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9064,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8984,
											"end": 8985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9081,
											"end": 9082,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9074,
											"end": 9089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9108,
											"end": 9112,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9098,
											"end": 9113,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9182,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9182,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9182,
											"end": 9202,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9182,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9216,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9245,
											"end": 9280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9260,
											"end": 9278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9280,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9245,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9304,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9492,
											"end": 9501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9480,
											"end": 9506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9480,
											"end": 9506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9582,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9569,
											"end": 9586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9566,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9516,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9665,
											"end": 9667,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9647,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9597,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9747,
											"end": 9749,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9736,
											"end": 9745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9729,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9679,
											"end": 9751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9751,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9679,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9316,
											"end": 9758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9804,
											"end": 9807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9823,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9841,
											"end": 9842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9823,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9823,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9823,
											"end": 9843,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9823,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9857,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9875,
											"end": 9876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9857,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9857,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9857,
											"end": 9877,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9857,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9897,
											"end": 9898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9921,
											"end": 9924,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9928,
											"end": 9946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9912,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Codes(EASY)/Build Token One.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getBalance()": "12065fe0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Codes(EASY)/Build Token One.sol\":\"WrigglyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/Codes(EASY)/Build Token One.sol\":{\"keccak256\":\"0x801d4208f41163ffb1e38e5a0777cfa7e846ea6d6a4235db4dac0b2dea57d9e0\",\"urls\":[\"bzz-raw://f7c418ac3ba97bf9887bf50492e00cc0029999f323b2c232b6fb7ca0b4f0f5a0\",\"dweb:/ipfs/QmeTL9jJaB74sVnRH8K8fvj39fLjYVFmdeSPNUwHnh545R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1108,
								"contract": "contracts/Codes(EASY)/Build Token One.sol:WrigglyToken",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Codes(EASY)/Build Token One.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Codes(EASY)/Build Token One.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1097
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 818,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															801
														],
														"declarations": [
															{
																"constant": false,
																"id": 801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 818,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 813,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 799,
															"id": 812,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 799,
														"id": 817,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1097,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 846,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 839,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 831,
															"id": 838,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 831,
														"id": 845,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1097,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 888,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 867,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 859,
															"id": 866,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															869
														],
														"declarations": [
															{
																"constant": false,
																"id": 869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 888,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 883,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 859,
															"id": 882,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 859,
														"id": 887,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1097,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 916,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 909,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 901,
															"id": 908,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 901,
														"id": 915,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1097,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 944,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 929,
															"id": 936,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 929,
														"id": 943,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1097,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 957,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 959,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1097,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 972,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 970,
												"id": 974,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1097,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 989,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1097,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1004,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1097,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1097,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "5054:106:5",
										"statements": [
											{
												"id": 1044,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "5096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1035,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "5101:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1037,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5104:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1033,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1039,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "5138:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1041,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "5142:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1032,
														"id": 1043,
														"nodeType": "Return",
														"src": "5131:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4972:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4994:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:5"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "5045:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:5"
									},
									"scope": 1097,
									"src": "4959:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "5739:105:5",
										"statements": [
											{
												"id": 1069,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1059,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "5781:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1062,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "5788:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1058,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1064,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "5822:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1066,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "5826:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1057,
														"id": 1068,
														"nodeType": "Return",
														"src": "5815:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5679:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1052,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:5"
									},
									"scope": 1097,
									"src": "5644:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "6585:105:5",
										"statements": [
											{
												"id": 1094,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1084,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1087,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "6634:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1083,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "6668:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "6672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1082,
														"id": 1093,
														"nodeType": "Return",
														"src": "6661:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6525:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 1097,
									"src": "6490:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1098,
							"src": "482:6210:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:5"
				},
				"id": 5
			},
			"contracts/Codes(EASY)/Build Token One.sol": {
				"ast": {
					"absolutePath": "contracts/Codes(EASY)/Build Token One.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SafeMath": [
							1097
						],
						"WrigglyToken": [
							1155
						]
					},
					"id": 1156,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1099,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 652,
							"src": "27:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 1098,
							"src": "84:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1102,
										"name": "ERC20",
										"nameLocations": [
											"170:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "170:5:6"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "170:5:6"
								}
							],
							"canonicalName": "WrigglyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155,
								651,
								41,
								755,
								729,
								785
							],
							"name": "WrigglyToken",
							"nameLocation": "154:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1106,
									"libraryName": {
										"id": 1104,
										"name": "SafeMath",
										"nameLocations": [
											"189:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1097,
										"src": "189:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "183:27:6",
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "202:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1108,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "233:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1155,
									"src": "218:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "308:117:6",
										"statements": [
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1117,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "336:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1118,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "342:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "346:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "342:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "336:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "336:16:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "370:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "374:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "370:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1125,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "382:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1127,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "404:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "404:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "398:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "382:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "364:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "364:51:6"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d7920546f6b656e",
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "288:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_510a6307a741df89ca01520d55119bedc02a7ba970667eb27bea92c21fc07e6d",
														"typeString": "literal_string \"My Token\""
													},
													"value": "My Token"
												},
												{
													"hexValue": "4d544b4e",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "300:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_07084fdbce980b5eca3143e34e5faf40bb051e3ae301a2ba0be11db4d2d807fe",
														"typeString": "literal_string \"MTKN\""
													},
													"value": "MTKN"
												}
											],
											"id": 1115,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1112,
												"name": "ERC20",
												"nameLocations": [
													"282:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "282:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "282:25:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "267:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "259:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:23:6"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:0:6"
									},
									"scope": 1155,
									"src": "247:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "485:151:6",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "rawBalance",
														"nameLocation": "521:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "513:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "513:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "544:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "548:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "544:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "534:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "534:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "513:42:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "rawBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "573:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "586:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1148,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "592:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "592:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "586:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "573:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1152,
												"nodeType": "Return",
												"src": "566:36:6"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "442:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:2:6"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "476:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:9:6"
									},
									"scope": 1155,
									"src": "433:203:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1156,
							"src": "145:494:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "0:641:6"
				},
				"id": 6
			}
		}
	}
}